"use strict";(self.webpackChunkdocusaurus_tsx=self.webpackChunkdocusaurus_tsx||[]).push([[9876],{431:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=t(4848),r=t(8453);const i={},l="Data",s={id:"reference/Config/data",title:"Data",description:"pydantic model eole.config.data.BaseVocabConfig[source]",source:"@site/docs/reference/Config/data.md",sourceDirName:"reference/Config",slug:"/reference/Config/data",permalink:"/eole/docs/reference/Config/data",draft:!1,unlisted:!1,editUrl:"https://github.com/eole-nlp/eole/tree/main/docs/docs/reference/Config/data.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Configuration",permalink:"/eole/docs/reference/Config/"},next:{title:"Inference",permalink:"/eole/docs/reference/Config/inference"}},a={},d=[{value:"<em>pydantic model</em> eole.config.data.BaseVocabConfig[source]",id:"pydantic-model-eoleconfigdatabasevocabconfigsource",level:3},{value:"<em>field</em> bos_token <em>: str | None</em> <em>= &#39;&lt;s&gt;&#39;</em>",id:"field-bos_token--str--none--s",level:4},{value:"<em>field</em> both_embeddings <em>: str | None</em> <em>= None</em>",id:"field-both_embeddings--str--none--none",level:4},{value:"<em>field</em> decoder_start_token <em>: str</em> <em>= &#39;&lt;s&gt;&#39;</em>",id:"field-decoder_start_token--str--s",level:4},{value:"<em>field</em> embeddings_type <em>: Literal[&#39;GloVe&#39;, &#39;word2vec&#39;] | None</em> <em>= None</em>",id:"field-embeddings_type--literalglove-word2vec--none--none",level:4},{value:"<em>field</em> eos_token <em>: str | None</em> <em>= &#39;&lt;/s&gt;&#39;</em>",id:"field-eos_token--str--none--s",level:4},{value:"<em>field</em> pad_token <em>: str | None</em> <em>= &#39;<blank>&#39;</em>",id:"field-pad_token--str--none--blank",level:4},{value:"<em>field</em> share_vocab <em>: bool</em> <em>= False</em>",id:"field-share_vocab--bool--false",level:4},{value:"<em>field</em> src_embeddings <em>: str | None</em> <em>= None</em>",id:"field-src_embeddings--str--none--none",level:4},{value:"<em>field</em> src_vocab <em>: str | None</em> <em>[Required]</em>",id:"field-src_vocab--str--none-required",level:4},{value:"<em>field</em> tgt_embeddings <em>: str | None</em> <em>= None</em>",id:"field-tgt_embeddings--str--none--none",level:4},{value:"<em>field</em> tgt_vocab <em>: str | None</em> <em>= None</em>",id:"field-tgt_vocab--str--none--none",level:4},{value:"<em>field</em> unk_token <em>: str | None</em> <em>= &#39;<unk>&#39;</em>",id:"field-unk_token--str--none--unk",level:4},{value:"<em>pydantic model</em> eole.config.data.VocabConfig[source]",id:"pydantic-model-eoleconfigdatavocabconfigsource",level:3},{value:"<em>field</em> src_vocab_size <em>: int</em> <em>= 32758</em>",id:"field-src_vocab_size--int--32758",level:4},{value:"<em>field</em> src_words_min_frequency <em>: int</em> <em>= 0</em>",id:"field-src_words_min_frequency--int--0",level:4},{value:"<em>field</em> tgt_vocab_size <em>: int</em> <em>= 32768</em>",id:"field-tgt_vocab_size--int--32768",level:4},{value:"<em>field</em> tgt_words_min_frequency <em>: int</em> <em>= 0</em>",id:"field-tgt_words_min_frequency--int--0",level:4},{value:"<em>field</em> vocab_size_multiple <em>: int</em> <em>= 8</em>",id:"field-vocab_size_multiple--int--8",level:4},{value:"<em>pydantic model</em> eole.config.data.Dataset[source]",id:"pydantic-model-eoleconfigdatadatasetsource",level:3},{value:"<em>field</em> avg_tok_max <em>: float | None</em> <em>= 20</em>",id:"field-avg_tok_max--float--none--20",level:4},{value:"<em>field</em> avg_tok_min <em>: float | None</em> <em>= 3</em>",id:"field-avg_tok_min--float--none--3",level:4},{value:"<em>field</em> lang_id <em>: List[str] | None</em> <em>= [&#39;en&#39;, &#39;fr&#39;]</em>",id:"field-lang_id--liststr--none--en-fr",level:4},{value:"<em>field</em> name <em>: str | None</em> <em>= None</em>",id:"field-name--str--none--none",level:4},{value:"<em>field</em> norm_numbers <em>: bool | None</em> <em>= True</em>",id:"field-norm_numbers--bool--none--true",level:4},{value:"<em>field</em> norm_quote_commas <em>: bool | None</em> <em>= True</em>",id:"field-norm_quote_commas--bool--none--true",level:4},{value:"<em>field</em> path_align <em>: str | None</em> <em>= None</em>",id:"field-path_align--str--none--none",level:4},{value:"<em>field</em> path_sco <em>: str | None</em> <em>= None</em>",id:"field-path_sco--str--none--none",level:4},{value:"<em>field</em> path_src <em>: str | None</em> <em>= None</em>",id:"field-path_src--str--none--none",level:4},{value:"<em>field</em> path_tgt <em>: str | None</em> <em>= None</em>",id:"field-path_tgt--str--none--none",level:4},{value:"<em>field</em> path_txt <em>: str | None</em> <em>= None</em>",id:"field-path_txt--str--none--none",level:4},{value:"<em>field</em> penn <em>: bool | None</em> <em>= True</em>",id:"field-penn--bool--none--true",level:4},{value:"<em>field</em> post_remove_control_chars <em>: bool | None</em> <em>= False</em>",id:"field-post_remove_control_chars--bool--none--false",level:4},{value:"<em>field</em> pre_replace_unicode_punct <em>: bool | None</em> <em>= False</em>",id:"field-pre_replace_unicode_punct--bool--none--false",level:4},{value:"<em>field</em> same_char <em>: bool | None</em> <em>= True</em>",id:"field-same_char--bool--none--true",level:4},{value:"<em>field</em> same_word <em>: bool | None</em> <em>= True</em>",id:"field-same_word--bool--none--true",level:4},{value:"<em>field</em> scripts_nok <em>: List[str] | None</em> <em>= []</em>",id:"field-scripts_nok--liststr--none--",level:4},{value:"<em>field</em> scripts_ok <em>: List[str] | None</em> <em>= [&#39;Latin&#39;, &#39;Common&#39;]</em>",id:"field-scripts_ok--liststr--none--latin-common",level:4},{value:"<em>field</em> src_eq_tgt <em>: bool | None</em> <em>= True</em>",id:"field-src_eq_tgt--bool--none--true",level:4},{value:"<em>field</em> src_lang <em>: str | None</em> <em>= None</em>",id:"field-src_lang--str--none--none",level:4},{value:"<em>field</em> src_prefix <em>: str | None</em> <em>= None</em>",id:"field-src_prefix--str--none--none",level:4},{value:"<em>field</em> src_suffix <em>: str | None</em> <em>= None</em>",id:"field-src_suffix--str--none--none",level:4},{value:"<em>field</em> src_tgt_ratio <em>: float | None</em> <em>= 2</em>",id:"field-src_tgt_ratio--float--none--2",level:4},{value:"<em>field</em> tgt_lang <em>: str | None</em> <em>= None</em>",id:"field-tgt_lang--str--none--none",level:4},{value:"<em>field</em> tgt_prefix <em>: str | None</em> <em>= None</em>",id:"field-tgt_prefix--str--none--none",level:4},{value:"<em>field</em> tgt_suffix <em>: str | None</em> <em>= None</em>",id:"field-tgt_suffix--str--none--none",level:4},{value:"<em>field</em> transforms <em>: List[str] | None</em> <em>= None</em>",id:"field-transforms--liststr--none--none",level:4},{value:"<em>field</em> weight <em>: int | None</em> <em>= 1</em>",id:"field-weight--int--none--1",level:4},{value:"<em>pydantic model</em> eole.config.data.DataConfig[source]",id:"pydantic-model-eoleconfigdatadataconfigsource",level:3},{value:"<em>field</em> data <em>: Dict[str, Dataset] | None</em> <em>[Required]</em>",id:"field-data--dictstr-dataset--none-required",level:4},{value:"<em>field</em> n_sample <em>: int | None</em> <em>= 0</em>",id:"field-n_sample--int--none--0",level:4},{value:"<em>field</em> overwrite <em>: bool</em> <em>= False</em>",id:"field-overwrite--bool--false",level:4},{value:"<em>field</em> save_data <em>: str | None</em> <em>= None</em>",id:"field-save_data--str--none--none",level:4},{value:"<em>field</em> skip_empty_level <em>: Literal[&#39;silent&#39;, &#39;warning&#39;, &#39;error&#39;]</em> <em>= &#39;warning&#39;</em>",id:"field-skip_empty_level--literalsilent-warning-error--warning",level:4},{value:"<em>field</em> transforms <em>: List[str]</em> <em>= []</em>",id:"field-transforms--liststr--",level:4},{value:"<em>field</em> transforms_configs <em>: NestedAllTransformsConfig | None</em> <em>[Optional]</em>",id:"field-transforms_configs--nestedalltransformsconfig--none-optional",level:4},{value:"model_post_init(context: Any, /)",id:"model_post_initcontext-any-",level:4},{value:"<em>pydantic model</em> eole.config.data.NestedAllTransformsConfig",id:"pydantic-model-eoleconfigdatanestedalltransformsconfig",level:3},{value:"<em>field</em> bart <em>: BARTNoiseConfig</em> <em>= BARTNoiseConfig(permute_sent_ratio=0.0, rotate_ratio=0.0, insert_ratio=0.0, random_ratio=0.0, mask_ratio=0.0, mask_length=&#39;subword&#39;, poisson_lambda=3.0, replace_length=-1)</em>",id:"field-bart--bartnoiseconfig--bartnoiseconfigpermute_sent_ratio00-rotate_ratio00-insert_ratio00-random_ratio00-mask_ratio00-mask_lengthsubword-poisson_lambda30-replace_length-1",level:4},{value:"<em>field</em> bpe <em>: BaseTokenizerConfig</em> <em>= BaseTokenizerConfig(src_subword_model=None, tgt_subword_model=None, src_subword_nbest=1, tgt_subword_nbest=1, src_subword_alpha=0.0, tgt_subword_alpha=0.0, src_subword_vocab=&#39;&#39;, tgt_subword_vocab=&#39;&#39;, src_vocab_threshold=0, tgt_vocab_threshold=0)</em>",id:"field-bpe--basetokenizerconfig--basetokenizerconfigsrc_subword_modelnone-tgt_subword_modelnone-src_subword_nbest1-tgt_subword_nbest1-src_subword_alpha00-tgt_subword_alpha00-src_subword_vocab-tgt_subword_vocab-src_vocab_threshold0-tgt_vocab_threshold0",level:4},{value:"<em>field</em> clean <em>: CleanConfig</em> <em>= CleanConfig(src_eq_tgt=False, same_char=False, same_word=False, scripts_ok=[&#39;Latin&#39;, &#39;Common&#39;], scripts_nok=[], src_tgt_ratio=2.0, avg_tok_min=3.0, avg_tok_max=20.0, langid=[])</em>",id:"field-clean--cleanconfig--cleanconfigsrc_eq_tgtfalse-same_charfalse-same_wordfalse-scripts_oklatin-common-scripts_nok-src_tgt_ratio20-avg_tok_min30-avg_tok_max200-langid",level:4},{value:"<em>field</em> docify <em>: DocifyConfig</em> <em>= DocifyConfig(doc_length=200, max_context=1)</em>",id:"field-docify--docifyconfig--docifyconfigdoc_length200-max_context1",level:4},{value:"<em>field</em> filtertoolong <em>: FilterTooLongConfig</em> <em>= FilterTooLongConfig(src_seq_length=192, tgt_seq_length=192)</em>",id:"field-filtertoolong--filtertoolongconfig--filtertoolongconfigsrc_seq_length192-tgt_seq_length192",level:4},{value:"<em>field</em> huggingface_tokenize <em>: HuggingfaceTokenizerConfig</em> <em>= HuggingfaceTokenizerConfig(path=None, huggingface_model=None, max_length=None)</em>",id:"field-huggingface_tokenize--huggingfacetokenizerconfig--huggingfacetokenizerconfigpathnone-huggingface_modelnone-max_lengthnone",level:4},{value:"<em>field</em> inlinetags <em>: InlineTagsConfig</em> <em>= InlineTagsConfig(tags_dictionary_path=None, tags_corpus_ratio=0.1, max_tags=12, paired_stag=&#39;\uff5fph_#<em>beg\uff60&#39;, paired_etag=&#39;\uff5fph</em>#<em>end\uff60&#39;, isolated_tag=&#39;\uff5fph</em>#_std\uff60&#39;, src_delimiter=&#39;\uff5ffuzzy\uff60&#39;)</em>",id:"field-inlinetags--inlinetagsconfig--inlinetagsconfigtags_dictionary_pathnone-tags_corpus_ratio01-max_tags12-paired_stagph_beg-paired_etagphend-isolated_tagph_std-src_delimiterfuzzy",level:4},{value:"<em>field</em> insert_mask_before_placeholder <em>: InsertMaskBeforePlaceholderConfig</em> <em>= InsertMaskBeforePlaceholderConfig(response_patterns=[&#39;Response : \uff5fnewline\uff60&#39;])</em>",id:"field-insert_mask_before_placeholder--insertmaskbeforeplaceholderconfig--insertmaskbeforeplaceholderconfigresponse_patternsresponse--newline",level:4},{value:"<em>field</em> normalize <em>: NormalizeConfig</em> <em>= NormalizeConfig(src_lang=&#39;&#39;, tgt_lang=&#39;&#39;, penn=True, norm_quote_commas=True, norm_numbers=True, pre_replace_unicode_punct=False, post_remove_control_chars=False)</em>",id:"field-normalize--normalizeconfig--normalizeconfigsrc_lang-tgt_lang-penntrue-norm_quote_commastrue-norm_numberstrue-pre_replace_unicode_punctfalse-post_remove_control_charsfalse",level:4},{value:"<em>field</em> onmt_tokenize <em>: ONMTTokenizerConfig</em> <em>= ONMTTokenizerConfig(src_subword_model=None, tgt_subword_model=None, src_subword_nbest=1, tgt_subword_nbest=1, src_subword_alpha=0.0, tgt_subword_alpha=0.0, src_subword_vocab=&#39;&#39;, tgt_subword_vocab=&#39;&#39;, src_vocab_threshold=0, tgt_vocab_threshold=0, src_subword_type=&#39;none&#39;, tgt_subword_type=&#39;none&#39;, src_onmttok_kwargs={&#39;mode&#39;: &#39;none&#39;}, tgt_onmttok_kwargs={&#39;mode&#39;: &#39;none&#39;}, gpt2_pretok=False, mapped_tokens=None)</em>",id:"field-onmt_tokenize--onmttokenizerconfig--onmttokenizerconfigsrc_subword_modelnone-tgt_subword_modelnone-src_subword_nbest1-tgt_subword_nbest1-src_subword_alpha00-tgt_subword_alpha00-src_subword_vocab-tgt_subword_vocab-src_vocab_threshold0-tgt_vocab_threshold0-src_subword_typenone-tgt_subword_typenone-src_onmttok_kwargsmode-none-tgt_onmttok_kwargsmode-none-gpt2_pretokfalse-mapped_tokensnone",level:4},{value:"<em>field</em> prefix <em>: PrefixConfig</em> <em>= PrefixConfig(src_prefix=&#39;&#39;, tgt_prefix=&#39;&#39;)</em>",id:"field-prefix--prefixconfig--prefixconfigsrc_prefix-tgt_prefix",level:4},{value:"<em>field</em> sentencepiece <em>: BaseTokenizerConfig</em> <em>= BaseTokenizerConfig(src_subword_model=None, tgt_subword_model=None, src_subword_nbest=1, tgt_subword_nbest=1, src_subword_alpha=0.0, tgt_subword_alpha=0.0, src_subword_vocab=&#39;&#39;, tgt_subword_vocab=&#39;&#39;, src_vocab_threshold=0, tgt_vocab_threshold=0)</em>",id:"field-sentencepiece--basetokenizerconfig--basetokenizerconfigsrc_subword_modelnone-tgt_subword_modelnone-src_subword_nbest1-tgt_subword_nbest1-src_subword_alpha00-tgt_subword_alpha00-src_subword_vocab-tgt_subword_vocab-src_vocab_threshold0-tgt_vocab_threshold0",level:4},{value:"<em>field</em> suffix <em>: SuffixConfig</em> <em>= SuffixConfig(src_suffix=&#39;&#39;, tgt_suffix=&#39;&#39;)</em>",id:"field-suffix--suffixconfig--suffixconfigsrc_suffix-tgt_suffix",level:4},{value:"<em>field</em> switchout <em>: SwitchOutConfig</em> <em>= SwitchOutConfig(switchout_temperature=1.0)</em>",id:"field-switchout--switchoutconfig--switchoutconfigswitchout_temperature10",level:4},{value:"<em>field</em> terminology <em>: TerminologyConfig</em> <em>= TerminologyConfig(termbase_path=None, src_spacy_language_model=None, tgt_spacy_language_model=None, term_corpus_ratio=0.3, term_example_ratio=0.2, src_term_stoken=&#39;\uff5fsrc_term_start\uff60&#39;, tgt_term_stoken=&#39;\uff5ftgt_term_start\uff60&#39;, tgt_term_etoken=&#39;\uff5ftgt_term_end\uff60&#39;, term_source_delimiter=&#39;\uff5ffuzzy\uff60&#39;)</em>",id:"field-terminology--terminologyconfig--terminologyconfigtermbase_pathnone-src_spacy_language_modelnone-tgt_spacy_language_modelnone-term_corpus_ratio03-term_example_ratio02-src_term_stokensrc_term_start-tgt_term_stokentgt_term_start-tgt_term_etokentgt_term_end-term_source_delimiterfuzzy",level:4},{value:"<em>field</em> tokendrop <em>: TokenDropConfig</em> <em>= TokenDropConfig(tokendrop_temperature=1.0)</em>",id:"field-tokendrop--tokendropconfig--tokendropconfigtokendrop_temperature10",level:4},{value:"<em>field</em> tokenmask <em>: TokenMaskConfig</em> <em>= TokenMaskConfig(tokenmask_temperature=1.0)</em>",id:"field-tokenmask--tokenmaskconfig--tokenmaskconfigtokenmask_temperature10",level:4},{value:"<em>field</em> uppercase <em>: UpperCaseConfig</em> <em>= UpperCaseConfig(upper_corpus_ratio=0.01)</em>",id:"field-uppercase--uppercaseconfig--uppercaseconfigupper_corpus_ratio001",level:4}];function c(n){const e={a:"a",blank:"blank",code:"code",count:"count",details:"details",em:"em",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",summary:"summary",ul:"ul",unk:"unk",word:"word",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"data",children:"Data"}),"\n",(0,o.jsxs)(e.h3,{id:"pydantic-model-eoleconfigdatabasevocabconfigsource",children:[(0,o.jsx)(e.em,{children:"pydantic model"})," eole.config.data.BaseVocabConfig",(0,o.jsx)(e.a,{href:"https://github.com/eole-nlp/eole/blob/master/eole/config/data.py#L12-L56",children:"[source]"})]}),"\n",(0,o.jsxs)(e.p,{children:["Bases: ",(0,o.jsx)(e.code,{children:"Config"})]}),"\n",(0,o.jsx)(e.p,{}),(0,o.jsxs)(e.details,{className:"autodoc_pydantic_collapsable_json",children:["\n",(0,o.jsx)(e.summary,{children:"Show JSON schema"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n   "title": "BaseVocabConfig",\n   "type": "object",\n   "properties": {\n      "src_vocab": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "description": "Path to src (or shared) vocabulary file. Format: one <word> or <word>\\t<count> per line.",\n         "title": "Src Vocab"\n      },\n      "tgt_vocab": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to tgt vocabulary file. Format: one <word> or <word>\\t<count> per line.",\n         "title": "Tgt Vocab"\n      },\n      "share_vocab": {\n         "default": false,\n         "description": "Share source and target vocabulary.",\n         "title": "Share Vocab",\n         "type": "boolean"\n      },\n      "decoder_start_token": {\n         "default": "&lt;s&gt;",\n         "description": "Default decoder start token. For most models it is &lt;s&gt; = BOS. Some fairseq models require &lt;/s&gt;.",\n         "title": "Decoder Start Token",\n         "type": "string"\n      },\n      "bos_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "&lt;s&gt;",\n         "title": "Bos Token"\n      },\n      "eos_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "&lt;/s&gt;",\n         "title": "Eos Token"\n      },\n      "unk_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "<unk>",\n         "title": "Unk Token"\n      },\n      "pad_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "<blank>",\n         "title": "Pad Token"\n      },\n      "both_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for both source and target tokens.",\n         "title": "Both Embeddings"\n      },\n      "src_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for source tokens.",\n         "title": "Src Embeddings"\n      },\n      "tgt_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for target tokens.",\n         "title": "Tgt Embeddings"\n      },\n      "embeddings_type": {\n         "anyOf": [\n            {\n               "enum": [\n                  "GloVe",\n                  "word2vec"\n               ],\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Type of embeddings file.",\n         "title": "Embeddings Type"\n      }\n   },\n   "additionalProperties": false,\n   "required": [\n      "src_vocab"\n   ]\n}\n'})}),"\n"]}),(0,o.jsx)(e.p,{}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Config:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_assignment"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_default"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"use_enum_values"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"extra"}),": ",(0,o.jsx)(e.em,{children:"str = forbid"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"protected_namespaces"}),": ",(0,o.jsx)(e.em,{children:"tuple = ()"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Fields:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.bos_token",children:(0,o.jsx)(e.code,{children:"bos_token (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.both_embeddings",children:(0,o.jsx)(e.code,{children:"both_embeddings (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.decoder_start_token",children:(0,o.jsx)(e.code,{children:"decoder_start_token (str)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.embeddings_type",children:(0,o.jsx)(e.code,{children:"embeddings_type (Literal['GloVe', 'word2vec'] | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.eos_token",children:(0,o.jsx)(e.code,{children:"eos_token (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.pad_token",children:(0,o.jsx)(e.code,{children:"pad_token (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.share_vocab",children:(0,o.jsx)(e.code,{children:"share_vocab (bool)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.src_embeddings",children:(0,o.jsx)(e.code,{children:"src_embeddings (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.src_vocab",children:(0,o.jsx)(e.code,{children:"src_vocab (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.tgt_embeddings",children:(0,o.jsx)(e.code,{children:"tgt_embeddings (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.tgt_vocab",children:(0,o.jsx)(e.code,{children:"tgt_vocab (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig.unk_token",children:(0,o.jsx)(e.code,{children:"unk_token (str | None)"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-bos_token--str--none--s",children:[(0,o.jsx)(e.em,{children:"field"})," bos_token ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= '<s>'"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-both_embeddings--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," both_embeddings ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsx)(e.p,{children:"Path to the embeddings file to use for both source and target tokens."}),"\n",(0,o.jsxs)(e.h4,{id:"field-decoder_start_token--str--s",children:[(0,o.jsx)(e.em,{children:"field"})," decoder_start_token ",(0,o.jsx)(e.em,{children:": str"})," ",(0,o.jsx)(e.em,{children:"= '<s>'"})]}),"\n",(0,o.jsx)(e.p,{children:"Default decoder start token. For most models it is <s> = BOS. Some fairseq models require </s>."}),"\n",(0,o.jsxs)(e.h4,{id:"field-embeddings_type--literalglove-word2vec--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," embeddings_type ",(0,o.jsx)(e.em,{children:": Literal['GloVe', 'word2vec'] | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsx)(e.p,{children:"Type of embeddings file."}),"\n",(0,o.jsxs)(e.h4,{id:"field-eos_token--str--none--s",children:[(0,o.jsx)(e.em,{children:"field"})," eos_token ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= '</s>'"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-pad_token--str--none--blank",children:[(0,o.jsx)(e.em,{children:"field"})," pad_token ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsxs)(e.em,{children:["= '",(0,o.jsx)(e.blank,{children:"'"})]})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-share_vocab--bool--false",children:[(0,o.jsx)(e.em,{children:"field"})," share_vocab ",(0,o.jsx)(e.em,{children:": bool"})," ",(0,o.jsx)(e.em,{children:"= False"})]}),"\n",(0,o.jsx)(e.p,{children:"Share source and target vocabulary."}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_embeddings--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," src_embeddings ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsx)(e.p,{children:"Path to the embeddings file to use for source tokens."}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_vocab--str--none-required",children:[(0,o.jsx)(e.em,{children:"field"})," src_vocab ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"[Required]"})]}),"\n",(0,o.jsxs)(e.p,{children:["Path to src (or shared) vocabulary file. Format: one ",(0,o.jsxs)(e.word,{children:[" or ",(0,o.jsxs)(e.word,{children:["   ",(0,o.jsx)(e.count,{children:" per line."})]})]})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_embeddings--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_embeddings ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsx)(e.p,{children:"Path to the embeddings file to use for target tokens."}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_vocab--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_vocab ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.p,{children:["Path to tgt vocabulary file. Format: one ",(0,o.jsxs)(e.word,{children:[" or ",(0,o.jsxs)(e.word,{children:["       ",(0,o.jsx)(e.count,{children:" per line."})]})]})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-unk_token--str--none--unk",children:[(0,o.jsx)(e.em,{children:"field"})," unk_token ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsxs)(e.em,{children:["= '",(0,o.jsx)(e.unk,{children:"'"})]})]}),"\n",(0,o.jsxs)(e.h3,{id:"pydantic-model-eoleconfigdatavocabconfigsource",children:[(0,o.jsx)(e.em,{children:"pydantic model"})," eole.config.data.VocabConfig",(0,o.jsx)(e.a,{href:"https://github.com/eole-nlp/eole/blob/master/eole/config/data.py#L59-L76",children:"[source]"})]}),"\n",(0,o.jsxs)(e.p,{children:["Bases: ",(0,o.jsx)(e.a,{href:"#eole.config.data.BaseVocabConfig",children:(0,o.jsx)(e.code,{children:"BaseVocabConfig"})})]}),"\n",(0,o.jsx)(e.p,{}),(0,o.jsxs)(e.details,{className:"autodoc_pydantic_collapsable_json",children:["\n",(0,o.jsx)(e.summary,{children:"Show JSON schema"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n   "title": "VocabConfig",\n   "type": "object",\n   "properties": {\n      "src_vocab": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "description": "Path to src (or shared) vocabulary file. Format: one <word> or <word>\\t<count> per line.",\n         "title": "Src Vocab"\n      },\n      "tgt_vocab": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to tgt vocabulary file. Format: one <word> or <word>\\t<count> per line.",\n         "title": "Tgt Vocab"\n      },\n      "share_vocab": {\n         "default": false,\n         "description": "Share source and target vocabulary.",\n         "title": "Share Vocab",\n         "type": "boolean"\n      },\n      "decoder_start_token": {\n         "default": "&lt;s&gt;",\n         "description": "Default decoder start token. For most models it is &lt;s&gt; = BOS. Some fairseq models require &lt;/s&gt;.",\n         "title": "Decoder Start Token",\n         "type": "string"\n      },\n      "bos_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "&lt;s&gt;",\n         "title": "Bos Token"\n      },\n      "eos_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "&lt;/s&gt;",\n         "title": "Eos Token"\n      },\n      "unk_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "<unk>",\n         "title": "Unk Token"\n      },\n      "pad_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "<blank>",\n         "title": "Pad Token"\n      },\n      "both_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for both source and target tokens.",\n         "title": "Both Embeddings"\n      },\n      "src_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for source tokens.",\n         "title": "Src Embeddings"\n      },\n      "tgt_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for target tokens.",\n         "title": "Tgt Embeddings"\n      },\n      "embeddings_type": {\n         "anyOf": [\n            {\n               "enum": [\n                  "GloVe",\n                  "word2vec"\n               ],\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Type of embeddings file.",\n         "title": "Embeddings Type"\n      },\n      "src_vocab_size": {\n         "default": 32758,\n         "description": "Maximum size of the source vocabulary.",\n         "title": "Src Vocab Size",\n         "type": "integer"\n      },\n      "tgt_vocab_size": {\n         "default": 32768,\n         "description": "Maximum size of the target vocabulary.",\n         "title": "Tgt Vocab Size",\n         "type": "integer"\n      },\n      "vocab_size_multiple": {\n         "default": 8,\n         "description": "Make the vocabulary size a multiple of this value. (Adds dummy tokens if needed.)",\n         "title": "Vocab Size Multiple",\n         "type": "integer"\n      },\n      "src_words_min_frequency": {\n         "default": 0,\n         "description": "Discard source words with lower frequency.",\n         "title": "Src Words Min Frequency",\n         "type": "integer"\n      },\n      "tgt_words_min_frequency": {\n         "default": 0,\n         "description": "Discard target words with lower frequency.",\n         "title": "Tgt Words Min Frequency",\n         "type": "integer"\n      }\n   },\n   "additionalProperties": false,\n   "required": [\n      "src_vocab"\n   ]\n}\n'})}),"\n"]}),(0,o.jsx)(e.p,{}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Config:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_assignment"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_default"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"use_enum_values"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"extra"}),": ",(0,o.jsx)(e.em,{children:"str = forbid"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"protected_namespaces"}),": ",(0,o.jsx)(e.em,{children:"tuple = ()"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Fields:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.VocabConfig.src_vocab_size",children:(0,o.jsx)(e.code,{children:"src_vocab_size (int)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.VocabConfig.src_words_min_frequency",children:(0,o.jsx)(e.code,{children:"src_words_min_frequency (int)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.VocabConfig.tgt_vocab_size",children:(0,o.jsx)(e.code,{children:"tgt_vocab_size (int)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.VocabConfig.tgt_words_min_frequency",children:(0,o.jsx)(e.code,{children:"tgt_words_min_frequency (int)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.VocabConfig.vocab_size_multiple",children:(0,o.jsx)(e.code,{children:"vocab_size_multiple (int)"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_vocab_size--int--32758",children:[(0,o.jsx)(e.em,{children:"field"})," src_vocab_size ",(0,o.jsx)(e.em,{children:": int"})," ",(0,o.jsx)(e.em,{children:"= 32758"})]}),"\n",(0,o.jsx)(e.p,{children:"Maximum size of the source vocabulary."}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_words_min_frequency--int--0",children:[(0,o.jsx)(e.em,{children:"field"})," src_words_min_frequency ",(0,o.jsx)(e.em,{children:": int"})," ",(0,o.jsx)(e.em,{children:"= 0"})]}),"\n",(0,o.jsx)(e.p,{children:"Discard source words with lower frequency."}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_vocab_size--int--32768",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_vocab_size ",(0,o.jsx)(e.em,{children:": int"})," ",(0,o.jsx)(e.em,{children:"= 32768"})]}),"\n",(0,o.jsx)(e.p,{children:"Maximum size of the target vocabulary."}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_words_min_frequency--int--0",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_words_min_frequency ",(0,o.jsx)(e.em,{children:": int"})," ",(0,o.jsx)(e.em,{children:"= 0"})]}),"\n",(0,o.jsx)(e.p,{children:"Discard target words with lower frequency."}),"\n",(0,o.jsxs)(e.h4,{id:"field-vocab_size_multiple--int--8",children:[(0,o.jsx)(e.em,{children:"field"})," vocab_size_multiple ",(0,o.jsx)(e.em,{children:": int"})," ",(0,o.jsx)(e.em,{children:"= 8"})]}),"\n",(0,o.jsx)(e.p,{children:"Make the vocabulary size a multiple of this value. (Adds dummy tokens if needed.)"}),"\n",(0,o.jsxs)(e.h3,{id:"pydantic-model-eoleconfigdatadatasetsource",children:[(0,o.jsx)(e.em,{children:"pydantic model"})," eole.config.data.Dataset",(0,o.jsx)(e.a,{href:"https://github.com/eole-nlp/eole/blob/master/eole/config/data.py#L79-L114",children:"[source]"})]}),"\n",(0,o.jsxs)(e.p,{children:["Bases: ",(0,o.jsx)(e.code,{children:"Config"})]}),"\n",(0,o.jsx)(e.p,{}),(0,o.jsxs)(e.details,{className:"autodoc_pydantic_collapsable_json",children:["\n",(0,o.jsx)(e.summary,{children:"Show JSON schema"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n   "title": "Dataset",\n   "type": "object",\n   "properties": {\n      "name": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Name"\n      },\n      "weight": {\n         "anyOf": [\n            {\n               "type": "integer"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": 1,\n         "title": "Weight"\n      },\n      "transforms": {\n         "anyOf": [\n            {\n               "items": {\n                  "type": "string"\n               },\n               "type": "array"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Transforms"\n      },\n      "path_src": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Path Src"\n      },\n      "path_tgt": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Path Tgt"\n      },\n      "path_sco": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Path Sco"\n      },\n      "path_txt": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Path Txt"\n      },\n      "path_align": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Path Align"\n      },\n      "src_prefix": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Src Prefix"\n      },\n      "tgt_prefix": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Tgt Prefix"\n      },\n      "src_suffix": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Src Suffix"\n      },\n      "tgt_suffix": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Tgt Suffix"\n      },\n      "src_lang": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Src Lang"\n      },\n      "tgt_lang": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "title": "Tgt Lang"\n      },\n      "penn": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": true,\n         "title": "Penn"\n      },\n      "norm_quote_commas": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": true,\n         "title": "Norm Quote Commas"\n      },\n      "norm_numbers": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": true,\n         "title": "Norm Numbers"\n      },\n      "pre_replace_unicode_punct": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": false,\n         "title": "Pre Replace Unicode Punct"\n      },\n      "post_remove_control_chars": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": false,\n         "title": "Post Remove Control Chars"\n      },\n      "src_eq_tgt": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": true,\n         "title": "Src Eq Tgt"\n      },\n      "same_char": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": true,\n         "title": "Same Char"\n      },\n      "same_word": {\n         "anyOf": [\n            {\n               "type": "boolean"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": true,\n         "title": "Same Word"\n      },\n      "scripts_ok": {\n         "anyOf": [\n            {\n               "items": {\n                  "type": "string"\n               },\n               "type": "array"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": [\n            "Latin",\n            "Common"\n         ],\n         "title": "Scripts Ok"\n      },\n      "scripts_nok": {\n         "anyOf": [\n            {\n               "items": {\n                  "type": "string"\n               },\n               "type": "array"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": [],\n         "title": "Scripts Nok"\n      },\n      "src_tgt_ratio": {\n         "anyOf": [\n            {\n               "type": "number"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": 2,\n         "title": "Src Tgt Ratio"\n      },\n      "avg_tok_min": {\n         "anyOf": [\n            {\n               "type": "number"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": 3,\n         "title": "Avg Tok Min"\n      },\n      "avg_tok_max": {\n         "anyOf": [\n            {\n               "type": "number"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": 20,\n         "title": "Avg Tok Max"\n      },\n      "lang_id": {\n         "anyOf": [\n            {\n               "items": {\n                  "type": "string"\n               },\n               "type": "array"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": [\n            "en",\n            "fr"\n         ],\n         "title": "Lang Id"\n      }\n   },\n   "additionalProperties": false\n}\n'})}),"\n"]}),(0,o.jsx)(e.p,{}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Config:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_assignment"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_default"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"use_enum_values"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"extra"}),": ",(0,o.jsx)(e.em,{children:"str = forbid"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"protected_namespaces"}),": ",(0,o.jsx)(e.em,{children:"tuple = ()"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Fields:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.avg_tok_max",children:(0,o.jsx)(e.code,{children:"avg_tok_max (float | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.avg_tok_min",children:(0,o.jsx)(e.code,{children:"avg_tok_min (float | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.lang_id",children:(0,o.jsx)(e.code,{children:"lang_id (List[str] | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.name",children:(0,o.jsx)(e.code,{children:"name (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.norm_numbers",children:(0,o.jsx)(e.code,{children:"norm_numbers (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.norm_quote_commas",children:(0,o.jsx)(e.code,{children:"norm_quote_commas (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.path_align",children:(0,o.jsx)(e.code,{children:"path_align (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.path_sco",children:(0,o.jsx)(e.code,{children:"path_sco (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.path_src",children:(0,o.jsx)(e.code,{children:"path_src (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.path_tgt",children:(0,o.jsx)(e.code,{children:"path_tgt (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.path_txt",children:(0,o.jsx)(e.code,{children:"path_txt (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.penn",children:(0,o.jsx)(e.code,{children:"penn (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.post_remove_control_chars",children:(0,o.jsx)(e.code,{children:"post_remove_control_chars (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.pre_replace_unicode_punct",children:(0,o.jsx)(e.code,{children:"pre_replace_unicode_punct (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.same_char",children:(0,o.jsx)(e.code,{children:"same_char (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.same_word",children:(0,o.jsx)(e.code,{children:"same_word (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.scripts_nok",children:(0,o.jsx)(e.code,{children:"scripts_nok (List[str] | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.scripts_ok",children:(0,o.jsx)(e.code,{children:"scripts_ok (List[str] | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.src_eq_tgt",children:(0,o.jsx)(e.code,{children:"src_eq_tgt (bool | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.src_lang",children:(0,o.jsx)(e.code,{children:"src_lang (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.src_prefix",children:(0,o.jsx)(e.code,{children:"src_prefix (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.src_suffix",children:(0,o.jsx)(e.code,{children:"src_suffix (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.src_tgt_ratio",children:(0,o.jsx)(e.code,{children:"src_tgt_ratio (float | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.tgt_lang",children:(0,o.jsx)(e.code,{children:"tgt_lang (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.tgt_prefix",children:(0,o.jsx)(e.code,{children:"tgt_prefix (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.tgt_suffix",children:(0,o.jsx)(e.code,{children:"tgt_suffix (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.transforms",children:(0,o.jsx)(e.code,{children:"transforms (List[str] | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset.weight",children:(0,o.jsx)(e.code,{children:"weight (int | None)"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-avg_tok_max--float--none--20",children:[(0,o.jsx)(e.em,{children:"field"})," avg_tok_max ",(0,o.jsx)(e.em,{children:": float | None"})," ",(0,o.jsx)(e.em,{children:"= 20"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-avg_tok_min--float--none--3",children:[(0,o.jsx)(e.em,{children:"field"})," avg_tok_min ",(0,o.jsx)(e.em,{children:": float | None"})," ",(0,o.jsx)(e.em,{children:"= 3"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-lang_id--liststr--none--en-fr",children:[(0,o.jsx)(e.em,{children:"field"})," lang_id ",(0,o.jsx)(e.em,{children:": List[str] | None"})," ",(0,o.jsx)(e.em,{children:"= ['en', 'fr']"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-name--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," name ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-norm_numbers--bool--none--true",children:[(0,o.jsx)(e.em,{children:"field"})," norm_numbers ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= True"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-norm_quote_commas--bool--none--true",children:[(0,o.jsx)(e.em,{children:"field"})," norm_quote_commas ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= True"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-path_align--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," path_align ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-path_sco--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," path_sco ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-path_src--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," path_src ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-path_tgt--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," path_tgt ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-path_txt--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," path_txt ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-penn--bool--none--true",children:[(0,o.jsx)(e.em,{children:"field"})," penn ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= True"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-post_remove_control_chars--bool--none--false",children:[(0,o.jsx)(e.em,{children:"field"})," post_remove_control_chars ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= False"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-pre_replace_unicode_punct--bool--none--false",children:[(0,o.jsx)(e.em,{children:"field"})," pre_replace_unicode_punct ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= False"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-same_char--bool--none--true",children:[(0,o.jsx)(e.em,{children:"field"})," same_char ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= True"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-same_word--bool--none--true",children:[(0,o.jsx)(e.em,{children:"field"})," same_word ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= True"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-scripts_nok--liststr--none--",children:[(0,o.jsx)(e.em,{children:"field"})," scripts_nok ",(0,o.jsx)(e.em,{children:": List[str] | None"})," ",(0,o.jsx)(e.em,{children:"= []"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-scripts_ok--liststr--none--latin-common",children:[(0,o.jsx)(e.em,{children:"field"})," scripts_ok ",(0,o.jsx)(e.em,{children:": List[str] | None"})," ",(0,o.jsx)(e.em,{children:"= ['Latin', 'Common']"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_eq_tgt--bool--none--true",children:[(0,o.jsx)(e.em,{children:"field"})," src_eq_tgt ",(0,o.jsx)(e.em,{children:": bool | None"})," ",(0,o.jsx)(e.em,{children:"= True"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_lang--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," src_lang ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_prefix--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," src_prefix ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_suffix--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," src_suffix ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-src_tgt_ratio--float--none--2",children:[(0,o.jsx)(e.em,{children:"field"})," src_tgt_ratio ",(0,o.jsx)(e.em,{children:": float | None"})," ",(0,o.jsx)(e.em,{children:"= 2"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_lang--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_lang ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_prefix--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_prefix ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-tgt_suffix--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," tgt_suffix ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-transforms--liststr--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," transforms ",(0,o.jsx)(e.em,{children:": List[str] | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-weight--int--none--1",children:[(0,o.jsx)(e.em,{children:"field"})," weight ",(0,o.jsx)(e.em,{children:": int | None"})," ",(0,o.jsx)(e.em,{children:"= 1"})]}),"\n",(0,o.jsxs)(e.h3,{id:"pydantic-model-eoleconfigdatadataconfigsource",children:[(0,o.jsx)(e.em,{children:"pydantic model"})," eole.config.data.DataConfig",(0,o.jsx)(e.a,{href:"https://github.com/eole-nlp/eole/blob/master/eole/config/data.py#L137-L345",children:"[source]"})]}),"\n",(0,o.jsxs)(e.p,{children:["Bases: ",(0,o.jsx)(e.a,{href:"#eole.config.data.VocabConfig",children:(0,o.jsx)(e.code,{children:"VocabConfig"})})]}),"\n",(0,o.jsx)(e.p,{}),(0,o.jsxs)(e.details,{className:"autodoc_pydantic_collapsable_json",children:["\n",(0,o.jsx)(e.summary,{children:"Show JSON schema"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n   "title": "DataConfig",\n   "type": "object",\n   "properties": {\n      "src_vocab": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "description": "Path to src (or shared) vocabulary file. Format: one <word> or <word>\\t<count> per line.",\n         "title": "Src Vocab"\n      },\n      "tgt_vocab": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to tgt vocabulary file. Format: one <word> or <word>\\t<count> per line.",\n         "title": "Tgt Vocab"\n      },\n      "share_vocab": {\n         "default": false,\n         "description": "Share source and target vocabulary.",\n         "title": "Share Vocab",\n         "type": "boolean"\n      },\n      "decoder_start_token": {\n         "default": "&lt;s&gt;",\n         "description": "Default decoder start token. For most models it is &lt;s&gt; = BOS. Some fairseq models require &lt;/s&gt;.",\n         "title": "Decoder Start Token",\n         "type": "string"\n      },\n      "bos_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "&lt;s&gt;",\n         "title": "Bos Token"\n      },\n      "eos_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "&lt;/s&gt;",\n         "title": "Eos Token"\n      },\n      "unk_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "<unk>",\n         "title": "Unk Token"\n      },\n      "pad_token": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": "<blank>",\n         "title": "Pad Token"\n      },\n      "both_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for both source and target tokens.",\n         "title": "Both Embeddings"\n      },\n      "src_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for source tokens.",\n         "title": "Src Embeddings"\n      },\n      "tgt_embeddings": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Path to the embeddings file to use for target tokens.",\n         "title": "Tgt Embeddings"\n      },\n      "embeddings_type": {\n         "anyOf": [\n            {\n               "enum": [\n                  "GloVe",\n                  "word2vec"\n               ],\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Type of embeddings file.",\n         "title": "Embeddings Type"\n      },\n      "src_vocab_size": {\n         "default": 32758,\n         "description": "Maximum size of the source vocabulary.",\n         "title": "Src Vocab Size",\n         "type": "integer"\n      },\n      "tgt_vocab_size": {\n         "default": 32768,\n         "description": "Maximum size of the target vocabulary.",\n         "title": "Tgt Vocab Size",\n         "type": "integer"\n      },\n      "vocab_size_multiple": {\n         "default": 8,\n         "description": "Make the vocabulary size a multiple of this value. (Adds dummy tokens if needed.)",\n         "title": "Vocab Size Multiple",\n         "type": "integer"\n      },\n      "src_words_min_frequency": {\n         "default": 0,\n         "description": "Discard source words with lower frequency.",\n         "title": "Src Words Min Frequency",\n         "type": "integer"\n      },\n      "tgt_words_min_frequency": {\n         "default": 0,\n         "description": "Discard target words with lower frequency.",\n         "title": "Tgt Words Min Frequency",\n         "type": "integer"\n      },\n      "data": {\n         "anyOf": [\n            {\n               "additionalProperties": {\n                  "$ref": "#/$defs/Dataset"\n               },\n               "type": "object"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "description": "All datasets and their specifications. See examples/*.yaml for further details.",\n         "title": "Data"\n      },\n      "transforms": {\n         "default": [],\n         "description": "Default transform pipeline to apply to data. Can be specified in each corpus of data to override.",\n         "items": {\n            "type": "string"\n         },\n         "title": "Transforms",\n         "type": "array"\n      },\n      "transforms_configs": {\n         "anyOf": [\n            {\n               "$ref": "#/$defs/NestedAllTransformsConfig"\n            },\n            {\n               "type": "null"\n            }\n         ]\n      },\n      "skip_empty_level": {\n         "default": "warning",\n         "description": "Logging level when encoutering empty examples. (silent: silently ignore/skip empty examples, warning: warn when ignoring/skipping empty examples, error: raise an error and stop execution when any empty example)",\n         "enum": [\n            "silent",\n            "warning",\n            "error"\n         ],\n         "title": "Skip Empty Level",\n         "type": "string"\n      },\n      "n_sample": {\n         "anyOf": [\n            {\n               "type": "integer"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": 0,\n         "title": "N Sample"\n      },\n      "save_data": {\n         "anyOf": [\n            {\n               "type": "string"\n            },\n            {\n               "type": "null"\n            }\n         ],\n         "default": null,\n         "description": "Output base path for objects that will be saved (vocab, transforms, embeddings, ...)",\n         "title": "Save Data"\n      },\n      "overwrite": {\n         "default": false,\n         "description": "Overwrite existing objects if any.",\n         "title": "Overwrite",\n         "type": "boolean"\n      }\n   },\n   "$defs": {\n      "BARTNoiseConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "permute_sent_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Permute this proportion of sentences (boundaries defined by [\'.\', \'?\', \'!\']) in all inputs.",\n               "title": "Permute Sent Ratio"\n            },\n            "rotate_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Rotate this proportion of inputs.",\n               "title": "Rotate Ratio"\n            },\n            "insert_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Insert this percentage of additional random tokens.",\n               "title": "Insert Ratio"\n            },\n            "random_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Instead of using <mask>, use random token this often.",\n               "title": "Random Ratio"\n            },\n            "mask_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Fraction of words/subwords that will be masked.",\n               "title": "Mask Ratio"\n            },\n            "mask_length": {\n               "anyOf": [\n                  {\n                     "enum": [\n                        "subword",\n                        "word",\n                        "span-poisson"\n                     ],\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "subword",\n               "description": "Length of masking window to apply.",\n               "title": "Mask Length"\n            },\n            "poisson_lambda": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 3.0,\n               "description": "Lambda for Poisson distribution to sample span length if `-mask_length` set to span-poisson.",\n               "title": "Poisson Lambda"\n            },\n            "replace_length": {\n               "anyOf": [\n                  {\n                     "maximum": 1,\n                     "minimum": -1,\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": -1,\n               "description": "When masking N tokens, replace with 0, 1, or N tokens. (use -1 for N)",\n               "title": "Replace Length"\n            }\n         },\n         "title": "BARTNoiseConfig",\n         "type": "object"\n      },\n      "BaseTokenizerConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for src (or shared).",\n               "title": "Src Subword Model"\n            },\n            "tgt_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for tgt.",\n               "title": "Tgt Subword Model"\n            },\n            "src_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (source side)",\n               "title": "Src Subword Nbest"\n            },\n            "tgt_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (target side)",\n               "title": "Tgt Subword Nbest"\n            },\n            "src_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (source side)",\n               "title": "Src Subword Alpha"\n            },\n            "tgt_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (target side)",\n               "title": "Tgt Subword Alpha"\n            },\n            "src_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for src subword. Format: <word>\\\\t<count> per line.",\n               "title": "Src Subword Vocab"\n            },\n            "tgt_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for tgt subword. Format: <word>\\\\t<count> per line.",\n               "title": "Tgt Subword Vocab"\n            },\n            "src_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce src subword in src_subword_vocab with frequency >= src_vocab_threshold.",\n               "title": "Src Vocab Threshold"\n            },\n            "tgt_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce tgt subword in tgt_subword_vocab with frequency >= tgt_vocab_threshold.",\n               "title": "Tgt Vocab Threshold"\n            }\n         },\n         "title": "BaseTokenizerConfig",\n         "type": "object"\n      },\n      "CleanConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_eq_tgt": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove ex src==tgt",\n               "title": "Src Eq Tgt"\n            },\n            "same_char": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove ex with same char more than 4 times",\n               "title": "Same Char"\n            },\n            "same_word": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove ex with same word more than 3 times",\n               "title": "Same Word"\n            },\n            "scripts_ok": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [\n                  "Latin",\n                  "Common"\n               ],\n               "description": "list of unicodata scripts accepted",\n               "title": "Scripts Ok"\n            },\n            "scripts_nok": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [],\n               "description": "list of unicodata scripts not accepted",\n               "title": "Scripts Nok"\n            },\n            "src_tgt_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 2.0,\n               "description": "ratio between src and tgt",\n               "title": "Src Tgt Ratio"\n            },\n            "avg_tok_min": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 3.0,\n               "description": "average length of tokens min",\n               "title": "Avg Tok Min"\n            },\n            "avg_tok_max": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 20.0,\n               "description": "average length of tokens max",\n               "title": "Avg Tok Max"\n            },\n            "langid": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [],\n               "description": "list of languages accepted",\n               "title": "Langid"\n            }\n         },\n         "title": "CleanConfig",\n         "type": "object"\n      },\n      "Dataset": {\n         "additionalProperties": false,\n         "properties": {\n            "name": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Name"\n            },\n            "weight": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "title": "Weight"\n            },\n            "transforms": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Transforms"\n            },\n            "path_src": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path Src"\n            },\n            "path_tgt": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path Tgt"\n            },\n            "path_sco": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path Sco"\n            },\n            "path_txt": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path Txt"\n            },\n            "path_align": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path Align"\n            },\n            "src_prefix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Src Prefix"\n            },\n            "tgt_prefix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Tgt Prefix"\n            },\n            "src_suffix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Src Suffix"\n            },\n            "tgt_suffix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Tgt Suffix"\n            },\n            "src_lang": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Src Lang"\n            },\n            "tgt_lang": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Tgt Lang"\n            },\n            "penn": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "title": "Penn"\n            },\n            "norm_quote_commas": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "title": "Norm Quote Commas"\n            },\n            "norm_numbers": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "title": "Norm Numbers"\n            },\n            "pre_replace_unicode_punct": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "title": "Pre Replace Unicode Punct"\n            },\n            "post_remove_control_chars": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "title": "Post Remove Control Chars"\n            },\n            "src_eq_tgt": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "title": "Src Eq Tgt"\n            },\n            "same_char": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "title": "Same Char"\n            },\n            "same_word": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "title": "Same Word"\n            },\n            "scripts_ok": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [\n                  "Latin",\n                  "Common"\n               ],\n               "title": "Scripts Ok"\n            },\n            "scripts_nok": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [],\n               "title": "Scripts Nok"\n            },\n            "src_tgt_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 2,\n               "title": "Src Tgt Ratio"\n            },\n            "avg_tok_min": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 3,\n               "title": "Avg Tok Min"\n            },\n            "avg_tok_max": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 20,\n               "title": "Avg Tok Max"\n            },\n            "lang_id": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [\n                  "en",\n                  "fr"\n               ],\n               "title": "Lang Id"\n            }\n         },\n         "title": "Dataset",\n         "type": "object"\n      },\n      "DocifyConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "doc_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 200,\n               "description": "Number of tokens per doc.",\n               "title": "Doc Length"\n            },\n            "max_context": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Max context segments.",\n               "title": "Max Context"\n            }\n         },\n         "title": "DocifyConfig",\n         "type": "object"\n      },\n      "FilterTooLongConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_seq_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 192,\n               "description": "Maximum source sequence length.",\n               "title": "Src Seq Length"\n            },\n            "tgt_seq_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 192,\n               "description": "Maximum target sequence length.",\n               "title": "Tgt Seq Length"\n            }\n         },\n         "title": "FilterTooLongConfig",\n         "type": "object"\n      },\n      "HuggingfaceTokenizerConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "path": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path"\n            },\n            "huggingface_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Huggingface Model"\n            },\n            "max_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Max Length"\n            }\n         },\n         "title": "HuggingfaceTokenizerConfig",\n         "type": "object"\n      },\n      "InlineTagsConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "tags_dictionary_path": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path to a flat term dictionary.",\n               "title": "Tags Dictionary Path"\n            },\n            "tags_corpus_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.1,\n               "description": "Ratio of corpus to augment with tags.",\n               "title": "Tags Corpus Ratio"\n            },\n            "max_tags": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 12,\n               "description": "Maximum number of tags that can be added to a single sentence.",\n               "title": "Max Tags"\n            },\n            "paired_stag": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fph_#_beg\\uff60",\n               "description": "The format of an opening paired inline tag. Must include the character #.",\n               "title": "Paired Stag"\n            },\n            "paired_etag": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fph_#_end\\uff60",\n               "description": "The format of a closing paired inline tag. Must include the character #.",\n               "title": "Paired Etag"\n            },\n            "isolated_tag": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fph_#_std\\uff60",\n               "description": "The format of an isolated inline tag. Must include the character #.",\n               "title": "Isolated Tag"\n            },\n            "src_delimiter": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ffuzzy\\uff60",\n               "description": "Any special token used for augmented src sentences. The default is the fuzzy token used in the FuzzyMatch transform.",\n               "title": "Src Delimiter"\n            }\n         },\n         "title": "InlineTagsConfig",\n         "type": "object"\n      },\n      "InsertMaskBeforePlaceholderConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "response_patterns": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [\n                  "Response : \\uff5fnewline\\uff60"\n               ],\n               "description": "Response pattern to locate the end of the prompt.",\n               "title": "Response Patterns"\n            }\n         },\n         "title": "InsertMaskBeforePlaceholderConfig",\n         "type": "object"\n      },\n      "NestedAllTransformsConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "switchout": {\n               "$ref": "#/$defs/SwitchOutConfig",\n               "default": {\n                  "switchout_temperature": 1.0\n               }\n            },\n            "tokendrop": {\n               "$ref": "#/$defs/TokenDropConfig",\n               "default": {\n                  "tokendrop_temperature": 1.0\n               }\n            },\n            "tokenmask": {\n               "$ref": "#/$defs/TokenMaskConfig",\n               "default": {\n                  "tokenmask_temperature": 1.0\n               }\n            },\n            "sentencepiece": {\n               "$ref": "#/$defs/BaseTokenizerConfig",\n               "default": {\n                  "src_subword_model": null,\n                  "tgt_subword_model": null,\n                  "src_subword_nbest": 1,\n                  "tgt_subword_nbest": 1,\n                  "src_subword_alpha": 0.0,\n                  "tgt_subword_alpha": 0.0,\n                  "src_subword_vocab": "",\n                  "tgt_subword_vocab": "",\n                  "src_vocab_threshold": 0,\n                  "tgt_vocab_threshold": 0\n               }\n            },\n            "bpe": {\n               "$ref": "#/$defs/BaseTokenizerConfig",\n               "default": {\n                  "src_subword_model": null,\n                  "tgt_subword_model": null,\n                  "src_subword_nbest": 1,\n                  "tgt_subword_nbest": 1,\n                  "src_subword_alpha": 0.0,\n                  "tgt_subword_alpha": 0.0,\n                  "src_subword_vocab": "",\n                  "tgt_subword_vocab": "",\n                  "src_vocab_threshold": 0,\n                  "tgt_vocab_threshold": 0\n               }\n            },\n            "onmt_tokenize": {\n               "$ref": "#/$defs/ONMTTokenizerConfig",\n               "default": {\n                  "src_subword_model": null,\n                  "tgt_subword_model": null,\n                  "src_subword_nbest": 1,\n                  "tgt_subword_nbest": 1,\n                  "src_subword_alpha": 0.0,\n                  "tgt_subword_alpha": 0.0,\n                  "src_subword_vocab": "",\n                  "tgt_subword_vocab": "",\n                  "src_vocab_threshold": 0,\n                  "tgt_vocab_threshold": 0,\n                  "src_subword_type": "none",\n                  "tgt_subword_type": "none",\n                  "src_onmttok_kwargs": {\n                     "mode": "none"\n                  },\n                  "tgt_onmttok_kwargs": {\n                     "mode": "none"\n                  },\n                  "gpt2_pretok": false,\n                  "mapped_tokens": null\n               }\n            },\n            "inlinetags": {\n               "$ref": "#/$defs/InlineTagsConfig",\n               "default": {\n                  "tags_dictionary_path": null,\n                  "tags_corpus_ratio": 0.1,\n                  "max_tags": 12,\n                  "paired_stag": "\\uff5fph_#_beg\\uff60",\n                  "paired_etag": "\\uff5fph_#_end\\uff60",\n                  "isolated_tag": "\\uff5fph_#_std\\uff60",\n                  "src_delimiter": "\\uff5ffuzzy\\uff60"\n               }\n            },\n            "huggingface_tokenize": {\n               "$ref": "#/$defs/HuggingfaceTokenizerConfig",\n               "default": {\n                  "path": null,\n                  "huggingface_model": null,\n                  "max_length": null\n               }\n            },\n            "uppercase": {\n               "$ref": "#/$defs/UpperCaseConfig",\n               "default": {\n                  "upper_corpus_ratio": 0.01\n               }\n            },\n            "bart": {\n               "$ref": "#/$defs/BARTNoiseConfig",\n               "default": {\n                  "permute_sent_ratio": 0.0,\n                  "rotate_ratio": 0.0,\n                  "insert_ratio": 0.0,\n                  "random_ratio": 0.0,\n                  "mask_ratio": 0.0,\n                  "mask_length": "subword",\n                  "poisson_lambda": 3.0,\n                  "replace_length": -1\n               }\n            },\n            "docify": {\n               "$ref": "#/$defs/DocifyConfig",\n               "default": {\n                  "doc_length": 200,\n                  "max_context": 1\n               }\n            },\n            "normalize": {\n               "$ref": "#/$defs/NormalizeConfig",\n               "default": {\n                  "src_lang": "",\n                  "tgt_lang": "",\n                  "penn": true,\n                  "norm_quote_commas": true,\n                  "norm_numbers": true,\n                  "pre_replace_unicode_punct": false,\n                  "post_remove_control_chars": false\n               }\n            },\n            "terminology": {\n               "$ref": "#/$defs/TerminologyConfig",\n               "default": {\n                  "termbase_path": null,\n                  "src_spacy_language_model": null,\n                  "tgt_spacy_language_model": null,\n                  "term_corpus_ratio": 0.3,\n                  "term_example_ratio": 0.2,\n                  "src_term_stoken": "\\uff5fsrc_term_start\\uff60",\n                  "tgt_term_stoken": "\\uff5ftgt_term_start\\uff60",\n                  "tgt_term_etoken": "\\uff5ftgt_term_end\\uff60",\n                  "term_source_delimiter": "\\uff5ffuzzy\\uff60"\n               }\n            },\n            "clean": {\n               "$ref": "#/$defs/CleanConfig",\n               "default": {\n                  "src_eq_tgt": false,\n                  "same_char": false,\n                  "same_word": false,\n                  "scripts_ok": [\n                     "Latin",\n                     "Common"\n                  ],\n                  "scripts_nok": [],\n                  "src_tgt_ratio": 2.0,\n                  "avg_tok_min": 3.0,\n                  "avg_tok_max": 20.0,\n                  "langid": []\n               }\n            },\n            "filtertoolong": {\n               "$ref": "#/$defs/FilterTooLongConfig",\n               "default": {\n                  "src_seq_length": 192,\n                  "tgt_seq_length": 192\n               }\n            },\n            "prefix": {\n               "$ref": "#/$defs/PrefixConfig",\n               "default": {\n                  "src_prefix": "",\n                  "tgt_prefix": ""\n               }\n            },\n            "suffix": {\n               "$ref": "#/$defs/SuffixConfig",\n               "default": {\n                  "src_suffix": "",\n                  "tgt_suffix": ""\n               }\n            },\n            "insert_mask_before_placeholder": {\n               "$ref": "#/$defs/InsertMaskBeforePlaceholderConfig",\n               "default": {\n                  "response_patterns": [\n                     "Response : \\uff5fnewline\\uff60"\n                  ]\n               }\n            }\n         },\n         "title": "NestedAllTransformsConfig",\n         "type": "object"\n      },\n      "NormalizeConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_lang": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Source language code",\n               "title": "Src Lang"\n            },\n            "tgt_lang": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Target language code",\n               "title": "Tgt Lang"\n            },\n            "penn": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "description": "Penn substitution",\n               "title": "Penn"\n            },\n            "norm_quote_commas": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "description": "Normalize quotations and commas",\n               "title": "Norm Quote Commas"\n            },\n            "norm_numbers": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "description": "Normalize numbers",\n               "title": "Norm Numbers"\n            },\n            "pre_replace_unicode_punct": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Replace unicode punct",\n               "title": "Pre Replace Unicode Punct"\n            },\n            "post_remove_control_chars": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove control chars",\n               "title": "Post Remove Control Chars"\n            }\n         },\n         "title": "NormalizeConfig",\n         "type": "object"\n      },\n      "ONMTTokenizerConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for src (or shared).",\n               "title": "Src Subword Model"\n            },\n            "tgt_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for tgt.",\n               "title": "Tgt Subword Model"\n            },\n            "src_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (source side)",\n               "title": "Src Subword Nbest"\n            },\n            "tgt_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (target side)",\n               "title": "Tgt Subword Nbest"\n            },\n            "src_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (source side)",\n               "title": "Src Subword Alpha"\n            },\n            "tgt_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (target side)",\n               "title": "Tgt Subword Alpha"\n            },\n            "src_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for src subword. Format: <word>\\\\t<count> per line.",\n               "title": "Src Subword Vocab"\n            },\n            "tgt_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for tgt subword. Format: <word>\\\\t<count> per line.",\n               "title": "Tgt Subword Vocab"\n            },\n            "src_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce src subword in src_subword_vocab with frequency >= src_vocab_threshold.",\n               "title": "Src Vocab Threshold"\n            },\n            "tgt_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce tgt subword in tgt_subword_vocab with frequency >= tgt_vocab_threshold.",\n               "title": "Tgt Vocab Threshold"\n            },\n            "src_subword_type": {\n               "anyOf": [\n                  {\n                     "enum": [\n                        "none",\n                        "sentencepiece",\n                        "bpe"\n                     ],\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "none",\n               "description": "Type of subword model for src (or shared) in pyonmttok.",\n               "title": "Src Subword Type"\n            },\n            "tgt_subword_type": {\n               "anyOf": [\n                  {\n                     "enum": [\n                        "none",\n                        "sentencepiece",\n                        "bpe"\n                     ],\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "none",\n               "description": "Type of subword model for tgt in pyonmttok.",\n               "title": "Tgt Subword Type"\n            },\n            "src_onmttok_kwargs": {\n               "anyOf": [\n                  {\n                     "type": "object"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": {\n                  "mode": "none"\n               },\n               "description": "Other pyonmttok options for src in dict string, except subword related options listed earlier.",\n               "title": "Src Onmttok Kwargs"\n            },\n            "tgt_onmttok_kwargs": {\n               "anyOf": [\n                  {\n                     "type": "object"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": {\n                  "mode": "none"\n               },\n               "description": "Other pyonmttok options for tgt in dict string, except subword related options listed earlier.",\n               "title": "Tgt Onmttok Kwargs"\n            },\n            "gpt2_pretok": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Preprocess sentence with byte-level mapping.",\n               "title": "Gpt2 Pretok"\n            },\n            "mapped_tokens": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "maxItems": 2,\n                        "minItems": 2,\n                        "prefixItems": [\n                           {\n                              "type": "string"\n                           },\n                           {\n                              "type": "string"\n                           }\n                        ],\n                        "type": "array"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Mapped tokens for placeholders preservation",\n               "title": "Mapped Tokens"\n            }\n         },\n         "title": "ONMTTokenizerConfig",\n         "type": "object"\n      },\n      "PrefixConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_prefix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to prepend to all source examples.",\n               "title": "Src Prefix"\n            },\n            "tgt_prefix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to prepend to all target examples.",\n               "title": "Tgt Prefix"\n            }\n         },\n         "title": "PrefixConfig",\n         "type": "object"\n      },\n      "SuffixConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_suffix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to append to all source examples.",\n               "title": "Src Suffix"\n            },\n            "tgt_suffix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to append to all target examples.",\n               "title": "Tgt Suffix"\n            }\n         },\n         "title": "SuffixConfig",\n         "type": "object"\n      },\n      "SwitchOutConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "switchout_temperature": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1.0,\n               "description": "Sampling temperature for SwitchOut. :math:`\\\\tau^{-1}` in :cite:`DBLP:journals/corr/abs-1808-07512`. Smaller value makes data more diverse.",\n               "title": "Switchout Temperature"\n            }\n         },\n         "title": "SwitchOutConfig",\n         "type": "object"\n      },\n      "TerminologyConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "termbase_path": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path to a dictionary file with terms.",\n               "title": "Termbase Path"\n            },\n            "src_spacy_language_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Name of the spaCy language model for the source corpus.",\n               "title": "Src Spacy Language Model"\n            },\n            "tgt_spacy_language_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Name of the spaCy language model for the target corpus.",\n               "title": "Tgt Spacy Language Model"\n            },\n            "term_corpus_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.3,\n               "description": "Ratio of corpus to augment with terms.",\n               "title": "Term Corpus Ratio"\n            },\n            "term_example_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.2,\n               "description": "Maximum terms allowed in an example.",\n               "title": "Term Example Ratio"\n            },\n            "src_term_stoken": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fsrc_term_start\\uff60",\n               "description": "The source term start token.",\n               "title": "Src Term Stoken"\n            },\n            "tgt_term_stoken": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ftgt_term_start\\uff60",\n               "description": "The target term start token.",\n               "title": "Tgt Term Stoken"\n            },\n            "tgt_term_etoken": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ftgt_term_end\\uff60",\n               "description": "The target term end token.",\n               "title": "Tgt Term Etoken"\n            },\n            "term_source_delimiter": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ffuzzy\\uff60",\n               "description": "Any special token used for augmented source sentences. The default is the fuzzy token used in the FuzzyMatch transform.",\n               "title": "Term Source Delimiter"\n            }\n         },\n         "title": "TerminologyConfig",\n         "type": "object"\n      },\n      "TokenDropConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "tokendrop_temperature": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1.0,\n               "description": "Sampling temperature for token deletion.",\n               "title": "Tokendrop Temperature"\n            }\n         },\n         "title": "TokenDropConfig",\n         "type": "object"\n      },\n      "TokenMaskConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "tokenmask_temperature": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1.0,\n               "description": "Sampling temperature for token masking.",\n               "title": "Tokenmask Temperature"\n            }\n         },\n         "title": "TokenMaskConfig",\n         "type": "object"\n      },\n      "UpperCaseConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "upper_corpus_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.01,\n               "description": "Corpus ratio to apply uppercasing.",\n               "title": "Upper Corpus Ratio"\n            }\n         },\n         "title": "UpperCaseConfig",\n         "type": "object"\n      }\n   },\n   "additionalProperties": false,\n   "required": [\n      "src_vocab",\n      "data"\n   ]\n}\n'})}),"\n"]}),(0,o.jsx)(e.p,{}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Config:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_assignment"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_default"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"use_enum_values"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"extra"}),": ",(0,o.jsx)(e.em,{children:"str = forbid"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"protected_namespaces"}),": ",(0,o.jsx)(e.em,{children:"tuple = ()"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Fields:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.data",children:(0,o.jsx)(e.code,{children:"data (Dict[str, eole.config.data.Dataset] | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.n_sample",children:(0,o.jsx)(e.code,{children:"n_sample (int | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.overwrite",children:(0,o.jsx)(e.code,{children:"overwrite (bool)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.save_data",children:(0,o.jsx)(e.code,{children:"save_data (str | None)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.skip_empty_level",children:(0,o.jsx)(e.code,{children:"skip_empty_level (Literal['silent', 'warning', 'error'])"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.transforms",children:(0,o.jsx)(e.code,{children:"transforms (List[str])"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.transforms_configs",children:(0,o.jsx)(e.code,{children:"transforms_configs (eole.config.data.NestedAllTransformsConfig | None)"})})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validators:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})," \xbb ",(0,o.jsx)(e.code,{children:"all fields"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"_str_to_dict"})," \xbb ",(0,o.jsx)(e.a,{href:"#eole.config.data.DataConfig.transforms_configs",children:(0,o.jsx)(e.code,{children:"transforms_configs"})})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-data--dictstr-dataset--none-required",children:[(0,o.jsx)(e.em,{children:"field"})," data ",(0,o.jsxs)(e.em,{children:[": Dict[str, ",(0,o.jsx)(e.a,{href:"#eole.config.data.Dataset",children:"Dataset"}),"] | None"]})," ",(0,o.jsx)(e.em,{children:"[Required]"})]}),"\n",(0,o.jsx)(e.p,{children:"All datasets and their specifications. See examples/"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"*\n"})}),"\n",(0,o.jsx)(e.p,{children:".yaml for further details."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-n_sample--int--none--0",children:[(0,o.jsx)(e.em,{children:"field"})," n_sample ",(0,o.jsx)(e.em,{children:": int | None"})," ",(0,o.jsx)(e.em,{children:"= 0"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-overwrite--bool--false",children:[(0,o.jsx)(e.em,{children:"field"})," overwrite ",(0,o.jsx)(e.em,{children:": bool"})," ",(0,o.jsx)(e.em,{children:"= False"})]}),"\n",(0,o.jsx)(e.p,{children:"Overwrite existing objects if any."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-save_data--str--none--none",children:[(0,o.jsx)(e.em,{children:"field"})," save_data ",(0,o.jsx)(e.em,{children:": str | None"})," ",(0,o.jsx)(e.em,{children:"= None"})]}),"\n",(0,o.jsx)(e.p,{children:"Output base path for objects that will be saved (vocab, transforms, embeddings, \u2026)"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-skip_empty_level--literalsilent-warning-error--warning",children:[(0,o.jsx)(e.em,{children:"field"})," skip_empty_level ",(0,o.jsx)(e.em,{children:": Literal['silent', 'warning', 'error']"})," ",(0,o.jsx)(e.em,{children:"= 'warning'"})]}),"\n",(0,o.jsx)(e.p,{children:"Logging level when encoutering empty examples. (silent: silently ignore/skip empty examples, warning: warn when ignoring/skipping empty examples, error: raise an error and stop execution when any empty example)"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-transforms--liststr--",children:[(0,o.jsx)(e.em,{children:"field"})," transforms ",(0,o.jsx)(e.em,{children:": List[str]"})," ",(0,o.jsx)(e.em,{children:"= []"})]}),"\n",(0,o.jsx)(e.p,{children:"Default transform pipeline to apply to data. Can be specified in each corpus of data to override."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-transforms_configs--nestedalltransformsconfig--none-optional",children:[(0,o.jsx)(e.em,{children:"field"})," transforms_configs ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig",children:"NestedAllTransformsConfig"})," | None"]})," ",(0,o.jsx)(e.em,{children:"[Optional]"})]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Validated by:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_maybe_set_huggingface_model"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"_str_to_dict"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h4,{id:"model_post_initcontext-any-",children:"model_post_init(context: Any, /)"}),"\n",(0,o.jsx)(e.p,{children:"This function is meant to behave like a BaseModel method to initialise private attributes."}),"\n",(0,o.jsx)(e.p,{children:"It takes context as an argument since that\u2019s what pydantic-core passes when calling it."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Parameters:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"self"})," \u2013 The BaseModel instance."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"context"})," \u2013 The context."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h3,{id:"pydantic-model-eoleconfigdatanestedalltransformsconfig",children:[(0,o.jsx)(e.em,{children:"pydantic model"})," eole.config.data.NestedAllTransformsConfig"]}),"\n",(0,o.jsxs)(e.p,{children:["Bases: ",(0,o.jsx)(e.code,{children:"Config"})]}),"\n",(0,o.jsx)(e.p,{}),(0,o.jsxs)(e.details,{className:"autodoc_pydantic_collapsable_json",children:["\n",(0,o.jsx)(e.summary,{children:"Show JSON schema"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n   "title": "NestedAllTransformsConfig",\n   "type": "object",\n   "properties": {\n      "switchout": {\n         "$ref": "#/$defs/SwitchOutConfig",\n         "default": {\n            "switchout_temperature": 1.0\n         }\n      },\n      "tokendrop": {\n         "$ref": "#/$defs/TokenDropConfig",\n         "default": {\n            "tokendrop_temperature": 1.0\n         }\n      },\n      "tokenmask": {\n         "$ref": "#/$defs/TokenMaskConfig",\n         "default": {\n            "tokenmask_temperature": 1.0\n         }\n      },\n      "sentencepiece": {\n         "$ref": "#/$defs/BaseTokenizerConfig",\n         "default": {\n            "src_subword_model": null,\n            "tgt_subword_model": null,\n            "src_subword_nbest": 1,\n            "tgt_subword_nbest": 1,\n            "src_subword_alpha": 0.0,\n            "tgt_subword_alpha": 0.0,\n            "src_subword_vocab": "",\n            "tgt_subword_vocab": "",\n            "src_vocab_threshold": 0,\n            "tgt_vocab_threshold": 0\n         }\n      },\n      "bpe": {\n         "$ref": "#/$defs/BaseTokenizerConfig",\n         "default": {\n            "src_subword_model": null,\n            "tgt_subword_model": null,\n            "src_subword_nbest": 1,\n            "tgt_subword_nbest": 1,\n            "src_subword_alpha": 0.0,\n            "tgt_subword_alpha": 0.0,\n            "src_subword_vocab": "",\n            "tgt_subword_vocab": "",\n            "src_vocab_threshold": 0,\n            "tgt_vocab_threshold": 0\n         }\n      },\n      "onmt_tokenize": {\n         "$ref": "#/$defs/ONMTTokenizerConfig",\n         "default": {\n            "src_subword_model": null,\n            "tgt_subword_model": null,\n            "src_subword_nbest": 1,\n            "tgt_subword_nbest": 1,\n            "src_subword_alpha": 0.0,\n            "tgt_subword_alpha": 0.0,\n            "src_subword_vocab": "",\n            "tgt_subword_vocab": "",\n            "src_vocab_threshold": 0,\n            "tgt_vocab_threshold": 0,\n            "src_subword_type": "none",\n            "tgt_subword_type": "none",\n            "src_onmttok_kwargs": {\n               "mode": "none"\n            },\n            "tgt_onmttok_kwargs": {\n               "mode": "none"\n            },\n            "gpt2_pretok": false,\n            "mapped_tokens": null\n         }\n      },\n      "inlinetags": {\n         "$ref": "#/$defs/InlineTagsConfig",\n         "default": {\n            "tags_dictionary_path": null,\n            "tags_corpus_ratio": 0.1,\n            "max_tags": 12,\n            "paired_stag": "\\uff5fph_#_beg\\uff60",\n            "paired_etag": "\\uff5fph_#_end\\uff60",\n            "isolated_tag": "\\uff5fph_#_std\\uff60",\n            "src_delimiter": "\\uff5ffuzzy\\uff60"\n         }\n      },\n      "huggingface_tokenize": {\n         "$ref": "#/$defs/HuggingfaceTokenizerConfig",\n         "default": {\n            "path": null,\n            "huggingface_model": null,\n            "max_length": null\n         }\n      },\n      "uppercase": {\n         "$ref": "#/$defs/UpperCaseConfig",\n         "default": {\n            "upper_corpus_ratio": 0.01\n         }\n      },\n      "bart": {\n         "$ref": "#/$defs/BARTNoiseConfig",\n         "default": {\n            "permute_sent_ratio": 0.0,\n            "rotate_ratio": 0.0,\n            "insert_ratio": 0.0,\n            "random_ratio": 0.0,\n            "mask_ratio": 0.0,\n            "mask_length": "subword",\n            "poisson_lambda": 3.0,\n            "replace_length": -1\n         }\n      },\n      "docify": {\n         "$ref": "#/$defs/DocifyConfig",\n         "default": {\n            "doc_length": 200,\n            "max_context": 1\n         }\n      },\n      "normalize": {\n         "$ref": "#/$defs/NormalizeConfig",\n         "default": {\n            "src_lang": "",\n            "tgt_lang": "",\n            "penn": true,\n            "norm_quote_commas": true,\n            "norm_numbers": true,\n            "pre_replace_unicode_punct": false,\n            "post_remove_control_chars": false\n         }\n      },\n      "terminology": {\n         "$ref": "#/$defs/TerminologyConfig",\n         "default": {\n            "termbase_path": null,\n            "src_spacy_language_model": null,\n            "tgt_spacy_language_model": null,\n            "term_corpus_ratio": 0.3,\n            "term_example_ratio": 0.2,\n            "src_term_stoken": "\\uff5fsrc_term_start\\uff60",\n            "tgt_term_stoken": "\\uff5ftgt_term_start\\uff60",\n            "tgt_term_etoken": "\\uff5ftgt_term_end\\uff60",\n            "term_source_delimiter": "\\uff5ffuzzy\\uff60"\n         }\n      },\n      "clean": {\n         "$ref": "#/$defs/CleanConfig",\n         "default": {\n            "src_eq_tgt": false,\n            "same_char": false,\n            "same_word": false,\n            "scripts_ok": [\n               "Latin",\n               "Common"\n            ],\n            "scripts_nok": [],\n            "src_tgt_ratio": 2.0,\n            "avg_tok_min": 3.0,\n            "avg_tok_max": 20.0,\n            "langid": []\n         }\n      },\n      "filtertoolong": {\n         "$ref": "#/$defs/FilterTooLongConfig",\n         "default": {\n            "src_seq_length": 192,\n            "tgt_seq_length": 192\n         }\n      },\n      "prefix": {\n         "$ref": "#/$defs/PrefixConfig",\n         "default": {\n            "src_prefix": "",\n            "tgt_prefix": ""\n         }\n      },\n      "suffix": {\n         "$ref": "#/$defs/SuffixConfig",\n         "default": {\n            "src_suffix": "",\n            "tgt_suffix": ""\n         }\n      },\n      "insert_mask_before_placeholder": {\n         "$ref": "#/$defs/InsertMaskBeforePlaceholderConfig",\n         "default": {\n            "response_patterns": [\n               "Response : \\uff5fnewline\\uff60"\n            ]\n         }\n      }\n   },\n   "$defs": {\n      "BARTNoiseConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "permute_sent_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Permute this proportion of sentences (boundaries defined by [\'.\', \'?\', \'!\']) in all inputs.",\n               "title": "Permute Sent Ratio"\n            },\n            "rotate_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Rotate this proportion of inputs.",\n               "title": "Rotate Ratio"\n            },\n            "insert_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Insert this percentage of additional random tokens.",\n               "title": "Insert Ratio"\n            },\n            "random_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Instead of using <mask>, use random token this often.",\n               "title": "Random Ratio"\n            },\n            "mask_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.0,\n               "description": "Fraction of words/subwords that will be masked.",\n               "title": "Mask Ratio"\n            },\n            "mask_length": {\n               "anyOf": [\n                  {\n                     "enum": [\n                        "subword",\n                        "word",\n                        "span-poisson"\n                     ],\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "subword",\n               "description": "Length of masking window to apply.",\n               "title": "Mask Length"\n            },\n            "poisson_lambda": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 3.0,\n               "description": "Lambda for Poisson distribution to sample span length if `-mask_length` set to span-poisson.",\n               "title": "Poisson Lambda"\n            },\n            "replace_length": {\n               "anyOf": [\n                  {\n                     "maximum": 1,\n                     "minimum": -1,\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": -1,\n               "description": "When masking N tokens, replace with 0, 1, or N tokens. (use -1 for N)",\n               "title": "Replace Length"\n            }\n         },\n         "title": "BARTNoiseConfig",\n         "type": "object"\n      },\n      "BaseTokenizerConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for src (or shared).",\n               "title": "Src Subword Model"\n            },\n            "tgt_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for tgt.",\n               "title": "Tgt Subword Model"\n            },\n            "src_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (source side)",\n               "title": "Src Subword Nbest"\n            },\n            "tgt_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (target side)",\n               "title": "Tgt Subword Nbest"\n            },\n            "src_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (source side)",\n               "title": "Src Subword Alpha"\n            },\n            "tgt_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (target side)",\n               "title": "Tgt Subword Alpha"\n            },\n            "src_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for src subword. Format: <word>\\\\t<count> per line.",\n               "title": "Src Subword Vocab"\n            },\n            "tgt_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for tgt subword. Format: <word>\\\\t<count> per line.",\n               "title": "Tgt Subword Vocab"\n            },\n            "src_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce src subword in src_subword_vocab with frequency >= src_vocab_threshold.",\n               "title": "Src Vocab Threshold"\n            },\n            "tgt_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce tgt subword in tgt_subword_vocab with frequency >= tgt_vocab_threshold.",\n               "title": "Tgt Vocab Threshold"\n            }\n         },\n         "title": "BaseTokenizerConfig",\n         "type": "object"\n      },\n      "CleanConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_eq_tgt": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove ex src==tgt",\n               "title": "Src Eq Tgt"\n            },\n            "same_char": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove ex with same char more than 4 times",\n               "title": "Same Char"\n            },\n            "same_word": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove ex with same word more than 3 times",\n               "title": "Same Word"\n            },\n            "scripts_ok": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [\n                  "Latin",\n                  "Common"\n               ],\n               "description": "list of unicodata scripts accepted",\n               "title": "Scripts Ok"\n            },\n            "scripts_nok": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [],\n               "description": "list of unicodata scripts not accepted",\n               "title": "Scripts Nok"\n            },\n            "src_tgt_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 2.0,\n               "description": "ratio between src and tgt",\n               "title": "Src Tgt Ratio"\n            },\n            "avg_tok_min": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 3.0,\n               "description": "average length of tokens min",\n               "title": "Avg Tok Min"\n            },\n            "avg_tok_max": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 20.0,\n               "description": "average length of tokens max",\n               "title": "Avg Tok Max"\n            },\n            "langid": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [],\n               "description": "list of languages accepted",\n               "title": "Langid"\n            }\n         },\n         "title": "CleanConfig",\n         "type": "object"\n      },\n      "DocifyConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "doc_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 200,\n               "description": "Number of tokens per doc.",\n               "title": "Doc Length"\n            },\n            "max_context": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Max context segments.",\n               "title": "Max Context"\n            }\n         },\n         "title": "DocifyConfig",\n         "type": "object"\n      },\n      "FilterTooLongConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_seq_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 192,\n               "description": "Maximum source sequence length.",\n               "title": "Src Seq Length"\n            },\n            "tgt_seq_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 192,\n               "description": "Maximum target sequence length.",\n               "title": "Tgt Seq Length"\n            }\n         },\n         "title": "FilterTooLongConfig",\n         "type": "object"\n      },\n      "HuggingfaceTokenizerConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "path": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Path"\n            },\n            "huggingface_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Huggingface Model"\n            },\n            "max_length": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "title": "Max Length"\n            }\n         },\n         "title": "HuggingfaceTokenizerConfig",\n         "type": "object"\n      },\n      "InlineTagsConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "tags_dictionary_path": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path to a flat term dictionary.",\n               "title": "Tags Dictionary Path"\n            },\n            "tags_corpus_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.1,\n               "description": "Ratio of corpus to augment with tags.",\n               "title": "Tags Corpus Ratio"\n            },\n            "max_tags": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 12,\n               "description": "Maximum number of tags that can be added to a single sentence.",\n               "title": "Max Tags"\n            },\n            "paired_stag": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fph_#_beg\\uff60",\n               "description": "The format of an opening paired inline tag. Must include the character #.",\n               "title": "Paired Stag"\n            },\n            "paired_etag": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fph_#_end\\uff60",\n               "description": "The format of a closing paired inline tag. Must include the character #.",\n               "title": "Paired Etag"\n            },\n            "isolated_tag": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fph_#_std\\uff60",\n               "description": "The format of an isolated inline tag. Must include the character #.",\n               "title": "Isolated Tag"\n            },\n            "src_delimiter": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ffuzzy\\uff60",\n               "description": "Any special token used for augmented src sentences. The default is the fuzzy token used in the FuzzyMatch transform.",\n               "title": "Src Delimiter"\n            }\n         },\n         "title": "InlineTagsConfig",\n         "type": "object"\n      },\n      "InsertMaskBeforePlaceholderConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "response_patterns": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "type": "string"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": [\n                  "Response : \\uff5fnewline\\uff60"\n               ],\n               "description": "Response pattern to locate the end of the prompt.",\n               "title": "Response Patterns"\n            }\n         },\n         "title": "InsertMaskBeforePlaceholderConfig",\n         "type": "object"\n      },\n      "NormalizeConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_lang": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Source language code",\n               "title": "Src Lang"\n            },\n            "tgt_lang": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Target language code",\n               "title": "Tgt Lang"\n            },\n            "penn": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "description": "Penn substitution",\n               "title": "Penn"\n            },\n            "norm_quote_commas": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "description": "Normalize quotations and commas",\n               "title": "Norm Quote Commas"\n            },\n            "norm_numbers": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": true,\n               "description": "Normalize numbers",\n               "title": "Norm Numbers"\n            },\n            "pre_replace_unicode_punct": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Replace unicode punct",\n               "title": "Pre Replace Unicode Punct"\n            },\n            "post_remove_control_chars": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Remove control chars",\n               "title": "Post Remove Control Chars"\n            }\n         },\n         "title": "NormalizeConfig",\n         "type": "object"\n      },\n      "ONMTTokenizerConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for src (or shared).",\n               "title": "Src Subword Model"\n            },\n            "tgt_subword_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path of subword model for tgt.",\n               "title": "Tgt Subword Model"\n            },\n            "src_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (source side)",\n               "title": "Src Subword Nbest"\n            },\n            "tgt_subword_nbest": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1,\n               "description": "Number of candidates in subword regularization. Valid for unigram sampling, invalid for BPE-dropout. (target side)",\n               "title": "Tgt Subword Nbest"\n            },\n            "src_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (source side)",\n               "title": "Src Subword Alpha"\n            },\n            "tgt_subword_alpha": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Smoothing parameter for sentencepiece unigram sampling, and dropout probability for BPE-dropout. (target side)",\n               "title": "Tgt Subword Alpha"\n            },\n            "src_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for src subword. Format: <word>\\\\t<count> per line.",\n               "title": "Src Subword Vocab"\n            },\n            "tgt_subword_vocab": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "Path to the vocabulary file for tgt subword. Format: <word>\\\\t<count> per line.",\n               "title": "Tgt Subword Vocab"\n            },\n            "src_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce src subword in src_subword_vocab with frequency >= src_vocab_threshold.",\n               "title": "Src Vocab Threshold"\n            },\n            "tgt_vocab_threshold": {\n               "anyOf": [\n                  {\n                     "type": "integer"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0,\n               "description": "Only produce tgt subword in tgt_subword_vocab with frequency >= tgt_vocab_threshold.",\n               "title": "Tgt Vocab Threshold"\n            },\n            "src_subword_type": {\n               "anyOf": [\n                  {\n                     "enum": [\n                        "none",\n                        "sentencepiece",\n                        "bpe"\n                     ],\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "none",\n               "description": "Type of subword model for src (or shared) in pyonmttok.",\n               "title": "Src Subword Type"\n            },\n            "tgt_subword_type": {\n               "anyOf": [\n                  {\n                     "enum": [\n                        "none",\n                        "sentencepiece",\n                        "bpe"\n                     ],\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "none",\n               "description": "Type of subword model for tgt in pyonmttok.",\n               "title": "Tgt Subword Type"\n            },\n            "src_onmttok_kwargs": {\n               "anyOf": [\n                  {\n                     "type": "object"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": {\n                  "mode": "none"\n               },\n               "description": "Other pyonmttok options for src in dict string, except subword related options listed earlier.",\n               "title": "Src Onmttok Kwargs"\n            },\n            "tgt_onmttok_kwargs": {\n               "anyOf": [\n                  {\n                     "type": "object"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": {\n                  "mode": "none"\n               },\n               "description": "Other pyonmttok options for tgt in dict string, except subword related options listed earlier.",\n               "title": "Tgt Onmttok Kwargs"\n            },\n            "gpt2_pretok": {\n               "anyOf": [\n                  {\n                     "type": "boolean"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": false,\n               "description": "Preprocess sentence with byte-level mapping.",\n               "title": "Gpt2 Pretok"\n            },\n            "mapped_tokens": {\n               "anyOf": [\n                  {\n                     "items": {\n                        "maxItems": 2,\n                        "minItems": 2,\n                        "prefixItems": [\n                           {\n                              "type": "string"\n                           },\n                           {\n                              "type": "string"\n                           }\n                        ],\n                        "type": "array"\n                     },\n                     "type": "array"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Mapped tokens for placeholders preservation",\n               "title": "Mapped Tokens"\n            }\n         },\n         "title": "ONMTTokenizerConfig",\n         "type": "object"\n      },\n      "PrefixConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_prefix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to prepend to all source examples.",\n               "title": "Src Prefix"\n            },\n            "tgt_prefix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to prepend to all target examples.",\n               "title": "Tgt Prefix"\n            }\n         },\n         "title": "PrefixConfig",\n         "type": "object"\n      },\n      "SuffixConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "src_suffix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to append to all source examples.",\n               "title": "Src Suffix"\n            },\n            "tgt_suffix": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "",\n               "description": "String to append to all target examples.",\n               "title": "Tgt Suffix"\n            }\n         },\n         "title": "SuffixConfig",\n         "type": "object"\n      },\n      "SwitchOutConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "switchout_temperature": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1.0,\n               "description": "Sampling temperature for SwitchOut. :math:`\\\\tau^{-1}` in :cite:`DBLP:journals/corr/abs-1808-07512`. Smaller value makes data more diverse.",\n               "title": "Switchout Temperature"\n            }\n         },\n         "title": "SwitchOutConfig",\n         "type": "object"\n      },\n      "TerminologyConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "termbase_path": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Path to a dictionary file with terms.",\n               "title": "Termbase Path"\n            },\n            "src_spacy_language_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Name of the spaCy language model for the source corpus.",\n               "title": "Src Spacy Language Model"\n            },\n            "tgt_spacy_language_model": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": null,\n               "description": "Name of the spaCy language model for the target corpus.",\n               "title": "Tgt Spacy Language Model"\n            },\n            "term_corpus_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.3,\n               "description": "Ratio of corpus to augment with terms.",\n               "title": "Term Corpus Ratio"\n            },\n            "term_example_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.2,\n               "description": "Maximum terms allowed in an example.",\n               "title": "Term Example Ratio"\n            },\n            "src_term_stoken": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5fsrc_term_start\\uff60",\n               "description": "The source term start token.",\n               "title": "Src Term Stoken"\n            },\n            "tgt_term_stoken": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ftgt_term_start\\uff60",\n               "description": "The target term start token.",\n               "title": "Tgt Term Stoken"\n            },\n            "tgt_term_etoken": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ftgt_term_end\\uff60",\n               "description": "The target term end token.",\n               "title": "Tgt Term Etoken"\n            },\n            "term_source_delimiter": {\n               "anyOf": [\n                  {\n                     "type": "string"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": "\\uff5ffuzzy\\uff60",\n               "description": "Any special token used for augmented source sentences. The default is the fuzzy token used in the FuzzyMatch transform.",\n               "title": "Term Source Delimiter"\n            }\n         },\n         "title": "TerminologyConfig",\n         "type": "object"\n      },\n      "TokenDropConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "tokendrop_temperature": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1.0,\n               "description": "Sampling temperature for token deletion.",\n               "title": "Tokendrop Temperature"\n            }\n         },\n         "title": "TokenDropConfig",\n         "type": "object"\n      },\n      "TokenMaskConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "tokenmask_temperature": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 1.0,\n               "description": "Sampling temperature for token masking.",\n               "title": "Tokenmask Temperature"\n            }\n         },\n         "title": "TokenMaskConfig",\n         "type": "object"\n      },\n      "UpperCaseConfig": {\n         "additionalProperties": false,\n         "properties": {\n            "upper_corpus_ratio": {\n               "anyOf": [\n                  {\n                     "type": "number"\n                  },\n                  {\n                     "type": "null"\n                  }\n               ],\n               "default": 0.01,\n               "description": "Corpus ratio to apply uppercasing.",\n               "title": "Upper Corpus Ratio"\n            }\n         },\n         "title": "UpperCaseConfig",\n         "type": "object"\n      }\n   },\n   "additionalProperties": false\n}\n'})}),"\n"]}),(0,o.jsx)(e.p,{}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Config:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_assignment"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"validate_default"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"use_enum_values"}),": ",(0,o.jsx)(e.em,{children:"bool = True"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"extra"}),": ",(0,o.jsx)(e.em,{children:"str = forbid"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"protected_namespaces"}),": ",(0,o.jsx)(e.em,{children:"tuple = ()"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Fields:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.bart",children:(0,o.jsx)(e.code,{children:"bart (eole.transforms.bart.BARTNoiseConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.bpe",children:(0,o.jsx)(e.code,{children:"bpe (eole.transforms.tokenize.BaseTokenizerConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.clean",children:(0,o.jsx)(e.code,{children:"clean (eole.transforms.clean.CleanConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.docify",children:(0,o.jsx)(e.code,{children:"docify (eole.transforms.docify.DocifyConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.filtertoolong",children:(0,o.jsx)(e.code,{children:"filtertoolong (eole.transforms.misc.FilterTooLongConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.huggingface_tokenize",children:(0,o.jsx)(e.code,{children:"huggingface_tokenize (eole.transforms.tokenize_id.HuggingfaceTokenizerConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.inlinetags",children:(0,o.jsx)(e.code,{children:"inlinetags (eole.transforms.inlinetags.InlineTagsConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.insert_mask_before_placeholder",children:(0,o.jsx)(e.code,{children:"insert_mask_before_placeholder (eole.transforms.insert_mask_before_placeholder.InsertMaskBeforePlaceholderConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.normalize",children:(0,o.jsx)(e.code,{children:"normalize (eole.transforms.normalize.NormalizeConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.onmt_tokenize",children:(0,o.jsx)(e.code,{children:"onmt_tokenize (eole.transforms.tokenize.ONMTTokenizerConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.prefix",children:(0,o.jsx)(e.code,{children:"prefix (eole.transforms.misc.PrefixConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.sentencepiece",children:(0,o.jsx)(e.code,{children:"sentencepiece (eole.transforms.tokenize.BaseTokenizerConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.suffix",children:(0,o.jsx)(e.code,{children:"suffix (eole.transforms.misc.SuffixConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.switchout",children:(0,o.jsx)(e.code,{children:"switchout (eole.transforms.sampling.SwitchOutConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.terminology",children:(0,o.jsx)(e.code,{children:"terminology (eole.transforms.terminology.TerminologyConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.tokendrop",children:(0,o.jsx)(e.code,{children:"tokendrop (eole.transforms.sampling.TokenDropConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.tokenmask",children:(0,o.jsx)(e.code,{children:"tokenmask (eole.transforms.sampling.TokenMaskConfig)"})})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#eole.config.data.NestedAllTransformsConfig.uppercase",children:(0,o.jsx)(e.code,{children:"uppercase (eole.transforms.uppercase.UpperCaseConfig)"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.h4,{id:"field-bart--bartnoiseconfig--bartnoiseconfigpermute_sent_ratio00-rotate_ratio00-insert_ratio00-random_ratio00-mask_ratio00-mask_lengthsubword-poisson_lambda30-replace_length-1",children:[(0,o.jsx)(e.em,{children:"field"})," bart ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.bart.BARTNoiseConfig",children:"BARTNoiseConfig"})]})," ",(0,o.jsx)(e.em,{children:"= BARTNoiseConfig(permute_sent_ratio=0.0, rotate_ratio=0.0, insert_ratio=0.0, random_ratio=0.0, mask_ratio=0.0, mask_length='subword', poisson_lambda=3.0, replace_length=-1)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-bpe--basetokenizerconfig--basetokenizerconfigsrc_subword_modelnone-tgt_subword_modelnone-src_subword_nbest1-tgt_subword_nbest1-src_subword_alpha00-tgt_subword_alpha00-src_subword_vocab-tgt_subword_vocab-src_vocab_threshold0-tgt_vocab_threshold0",children:[(0,o.jsx)(e.em,{children:"field"})," bpe ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.tokenize.BaseTokenizerConfig",children:"BaseTokenizerConfig"})]})," ",(0,o.jsx)(e.em,{children:"= BaseTokenizerConfig(src_subword_model=None, tgt_subword_model=None, src_subword_nbest=1, tgt_subword_nbest=1, src_subword_alpha=0.0, tgt_subword_alpha=0.0, src_subword_vocab='', tgt_subword_vocab='', src_vocab_threshold=0, tgt_vocab_threshold=0)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-clean--cleanconfig--cleanconfigsrc_eq_tgtfalse-same_charfalse-same_wordfalse-scripts_oklatin-common-scripts_nok-src_tgt_ratio20-avg_tok_min30-avg_tok_max200-langid",children:[(0,o.jsx)(e.em,{children:"field"})," clean ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.clean.CleanConfig",children:"CleanConfig"})]})," ",(0,o.jsx)(e.em,{children:"= CleanConfig(src_eq_tgt=False, same_char=False, same_word=False, scripts_ok=['Latin', 'Common'], scripts_nok=[], src_tgt_ratio=2.0, avg_tok_min=3.0, avg_tok_max=20.0, langid=[])"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-docify--docifyconfig--docifyconfigdoc_length200-max_context1",children:[(0,o.jsx)(e.em,{children:"field"})," docify ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.docify.DocifyConfig",children:"DocifyConfig"})]})," ",(0,o.jsx)(e.em,{children:"= DocifyConfig(doc_length=200, max_context=1)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-filtertoolong--filtertoolongconfig--filtertoolongconfigsrc_seq_length192-tgt_seq_length192",children:[(0,o.jsx)(e.em,{children:"field"})," filtertoolong ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.misc.FilterTooLongConfig",children:"FilterTooLongConfig"})]})," ",(0,o.jsx)(e.em,{children:"= FilterTooLongConfig(src_seq_length=192, tgt_seq_length=192)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-huggingface_tokenize--huggingfacetokenizerconfig--huggingfacetokenizerconfigpathnone-huggingface_modelnone-max_lengthnone",children:[(0,o.jsx)(e.em,{children:"field"})," huggingface_tokenize ",(0,o.jsx)(e.em,{children:": HuggingfaceTokenizerConfig"})," ",(0,o.jsx)(e.em,{children:"= HuggingfaceTokenizerConfig(path=None, huggingface_model=None, max_length=None)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-inlinetags--inlinetagsconfig--inlinetagsconfigtags_dictionary_pathnone-tags_corpus_ratio01-max_tags12-paired_stagph_beg-paired_etagphend-isolated_tagph_std-src_delimiterfuzzy",children:[(0,o.jsx)(e.em,{children:"field"})," inlinetags ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.inlinetags.InlineTagsConfig",children:"InlineTagsConfig"})]})," ",(0,o.jsxs)(e.em,{children:["= InlineTagsConfig(tags_dictionary_path=None, tags_corpus_ratio=0.1, max_tags=12, paired_stag='\uff5fph_#",(0,o.jsx)(e.em,{children:"beg\uff60', paired_etag='\uff5fph"}),"#",(0,o.jsx)(e.em,{children:"end\uff60', isolated_tag='\uff5fph"}),"#_std\uff60', src_delimiter='\uff5ffuzzy\uff60')"]})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-insert_mask_before_placeholder--insertmaskbeforeplaceholderconfig--insertmaskbeforeplaceholderconfigresponse_patternsresponse--newline",children:[(0,o.jsx)(e.em,{children:"field"})," insert_mask_before_placeholder ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.insert_mask_before_placeholder.InsertMaskBeforePlaceholderConfig",children:"InsertMaskBeforePlaceholderConfig"})]})," ",(0,o.jsx)(e.em,{children:"= InsertMaskBeforePlaceholderConfig(response_patterns=['Response : \uff5fnewline\uff60'])"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-normalize--normalizeconfig--normalizeconfigsrc_lang-tgt_lang-penntrue-norm_quote_commastrue-norm_numberstrue-pre_replace_unicode_punctfalse-post_remove_control_charsfalse",children:[(0,o.jsx)(e.em,{children:"field"})," normalize ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.normalize.NormalizeConfig",children:"NormalizeConfig"})]})," ",(0,o.jsx)(e.em,{children:"= NormalizeConfig(src_lang='', tgt_lang='', penn=True, norm_quote_commas=True, norm_numbers=True, pre_replace_unicode_punct=False, post_remove_control_chars=False)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-onmt_tokenize--onmttokenizerconfig--onmttokenizerconfigsrc_subword_modelnone-tgt_subword_modelnone-src_subword_nbest1-tgt_subword_nbest1-src_subword_alpha00-tgt_subword_alpha00-src_subword_vocab-tgt_subword_vocab-src_vocab_threshold0-tgt_vocab_threshold0-src_subword_typenone-tgt_subword_typenone-src_onmttok_kwargsmode-none-tgt_onmttok_kwargsmode-none-gpt2_pretokfalse-mapped_tokensnone",children:[(0,o.jsx)(e.em,{children:"field"})," onmt_tokenize ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.tokenize.ONMTTokenizerConfig",children:"ONMTTokenizerConfig"})]})," ",(0,o.jsx)(e.em,{children:"= ONMTTokenizerConfig(src_subword_model=None, tgt_subword_model=None, src_subword_nbest=1, tgt_subword_nbest=1, src_subword_alpha=0.0, tgt_subword_alpha=0.0, src_subword_vocab='', tgt_subword_vocab='', src_vocab_threshold=0, tgt_vocab_threshold=0, src_subword_type='none', tgt_subword_type='none', src_onmttok_kwargs={'mode': 'none'}, tgt_onmttok_kwargs={'mode': 'none'}, gpt2_pretok=False, mapped_tokens=None)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-prefix--prefixconfig--prefixconfigsrc_prefix-tgt_prefix",children:[(0,o.jsx)(e.em,{children:"field"})," prefix ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.misc.PrefixConfig",children:"PrefixConfig"})]})," ",(0,o.jsx)(e.em,{children:"= PrefixConfig(src_prefix='', tgt_prefix='')"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-sentencepiece--basetokenizerconfig--basetokenizerconfigsrc_subword_modelnone-tgt_subword_modelnone-src_subword_nbest1-tgt_subword_nbest1-src_subword_alpha00-tgt_subword_alpha00-src_subword_vocab-tgt_subword_vocab-src_vocab_threshold0-tgt_vocab_threshold0",children:[(0,o.jsx)(e.em,{children:"field"})," sentencepiece ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.tokenize.BaseTokenizerConfig",children:"BaseTokenizerConfig"})]})," ",(0,o.jsx)(e.em,{children:"= BaseTokenizerConfig(src_subword_model=None, tgt_subword_model=None, src_subword_nbest=1, tgt_subword_nbest=1, src_subword_alpha=0.0, tgt_subword_alpha=0.0, src_subword_vocab='', tgt_subword_vocab='', src_vocab_threshold=0, tgt_vocab_threshold=0)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-suffix--suffixconfig--suffixconfigsrc_suffix-tgt_suffix",children:[(0,o.jsx)(e.em,{children:"field"})," suffix ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.misc.SuffixConfig",children:"SuffixConfig"})]})," ",(0,o.jsx)(e.em,{children:"= SuffixConfig(src_suffix='', tgt_suffix='')"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-switchout--switchoutconfig--switchoutconfigswitchout_temperature10",children:[(0,o.jsx)(e.em,{children:"field"})," switchout ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.sampling.SwitchOutConfig",children:"SwitchOutConfig"})]})," ",(0,o.jsx)(e.em,{children:"= SwitchOutConfig(switchout_temperature=1.0)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-terminology--terminologyconfig--terminologyconfigtermbase_pathnone-src_spacy_language_modelnone-tgt_spacy_language_modelnone-term_corpus_ratio03-term_example_ratio02-src_term_stokensrc_term_start-tgt_term_stokentgt_term_start-tgt_term_etokentgt_term_end-term_source_delimiterfuzzy",children:[(0,o.jsx)(e.em,{children:"field"})," terminology ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.terminology.TerminologyConfig",children:"TerminologyConfig"})]})," ",(0,o.jsx)(e.em,{children:"= TerminologyConfig(termbase_path=None, src_spacy_language_model=None, tgt_spacy_language_model=None, term_corpus_ratio=0.3, term_example_ratio=0.2, src_term_stoken='\uff5fsrc_term_start\uff60', tgt_term_stoken='\uff5ftgt_term_start\uff60', tgt_term_etoken='\uff5ftgt_term_end\uff60', term_source_delimiter='\uff5ffuzzy\uff60')"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-tokendrop--tokendropconfig--tokendropconfigtokendrop_temperature10",children:[(0,o.jsx)(e.em,{children:"field"})," tokendrop ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.sampling.TokenDropConfig",children:"TokenDropConfig"})]})," ",(0,o.jsx)(e.em,{children:"= TokenDropConfig(tokendrop_temperature=1.0)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-tokenmask--tokenmaskconfig--tokenmaskconfigtokenmask_temperature10",children:[(0,o.jsx)(e.em,{children:"field"})," tokenmask ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.sampling.TokenMaskConfig",children:"TokenMaskConfig"})]})," ",(0,o.jsx)(e.em,{children:"= TokenMaskConfig(tokenmask_temperature=1.0)"})]}),"\n",(0,o.jsxs)(e.h4,{id:"field-uppercase--uppercaseconfig--uppercaseconfigupper_corpus_ratio001",children:[(0,o.jsx)(e.em,{children:"field"})," uppercase ",(0,o.jsxs)(e.em,{children:[": ",(0,o.jsx)(e.a,{href:"/eole/docs/reference/Config/transforms#eole.transforms.uppercase.UpperCaseConfig",children:"UpperCaseConfig"})]})," ",(0,o.jsx)(e.em,{children:"= UpperCaseConfig(upper_corpus_ratio=0.01)"})]})]})}function f(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>s});var o=t(6540);const r={},i=o.createContext(r);function l(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);