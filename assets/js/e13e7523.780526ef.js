"use strict";(self.webpackChunkdocusaurus_tsx=self.webpackChunkdocusaurus_tsx||[]).push([[7948],{3856:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var l=r(4848),s=r(8453);const t={},i="Prediction",o={id:"reference/Core API/inference",title:"Prediction",description:"Predictions",source:"@site/docs/reference/Core API/2_inference.md",sourceDirName:"reference/Core API",slug:"/reference/Core API/inference",permalink:"/eole/docs/reference/Core API/inference",draft:!1,unlisted:!1,editUrl:"https://github.com/eole-nlp/eole/tree/main/docs/docs/reference/Core API/2_inference.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"apiSidebar",previous:{title:"Data Loaders",permalink:"/eole/docs/reference/Core API/dataloaders"},next:{title:"Bibliography",permalink:"/eole/docs/reference/bibliography"}},c={},a=[{value:"Predictions",id:"predictions",level:2},{value:"Predictor Classes",id:"predictor-classes",level:2},{value:"Decoding Strategies",id:"decoding-strategies",level:2},{value:"eole.predict.greedy_search.sample_with_temperature(logits, temperature, top_k, top_p)",id:"eolepredictgreedy_searchsample_with_temperaturelogits-temperature-top_k-top_p",level:3},{value:"Scoring",id:"scoring",level:2},{value:"<em>class</em> eole.predict.penalties.PenaltyBuilder(cov_pen, length_pen)",id:"class-eolepredictpenaltiespenaltybuildercov_pen-length_pen",level:3},{value:"coverage_none(cov, beta=0.0)",id:"coverage_nonecov-beta00",level:4},{value:"coverage_summary(cov, beta=0.0)",id:"coverage_summarycov-beta00",level:4},{value:"coverage_wu(cov, beta=0.0)",id:"coverage_wucov-beta00",level:4},{value:"length_average(cur_len, alpha=1.0)",id:"length_averagecur_len-alpha10",level:4},{value:"length_none(cur_len, alpha=0.0)",id:"length_nonecur_len-alpha00",level:4},{value:"length_wu(cur_len, alpha=0.0)",id:"length_wucur_len-alpha00",level:4}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"prediction",children:"Prediction"}),"\n",(0,l.jsx)(n.h2,{id:"predictions",children:"Predictions"}),"\n",(0,l.jsx)(n.h2,{id:"predictor-classes",children:"Predictor Classes"}),"\n",(0,l.jsx)(n.h2,{id:"decoding-strategies",children:"Decoding Strategies"}),"\n",(0,l.jsx)(n.h3,{id:"eolepredictgreedy_searchsample_with_temperaturelogits-temperature-top_k-top_p",children:"eole.predict.greedy_search.sample_with_temperature(logits, temperature, top_k, top_p)"}),"\n",(0,l.jsx)(n.p,{children:"Select next tokens randomly from the top k possible next tokens."}),"\n",(0,l.jsxs)(n.p,{children:["Samples from a categorical distribution over the ",(0,l.jsx)(n.code,{children:"top_k"})," words using\nthe category probabilities ",(0,l.jsx)(n.code,{children:"logits / temperature"}),"."]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"logits"})," (",(0,l.jsx)(n.em,{children:"FloatTensor"}),") \u2013 Shaped ",(0,l.jsx)(n.code,{children:"(batch_size, vocab_size)"}),".\nThese can be logits (",(0,l.jsx)(n.code,{children:"(-inf, inf)"}),") or log-probs (",(0,l.jsx)(n.code,{children:"(-inf, 0]"}),").\n(The distribution actually uses the log-probabilities\n",(0,l.jsx)(n.code,{children:"logits - logits.logsumexp(-1)"}),", which equals the logits if\nthey are log-probabilities summing to 1.)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"temperature"})," (",(0,l.jsx)(n.em,{children:"float"}),") \u2013 Used to scale down logits. The higher the\nvalue, the more likely it is that a non-max word will be\nsampled."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"top_k"})," (",(0,l.jsx)(n.em,{children:"int"}),") \u2013 This many words could potentially be chosen. The\nother logits are set to have probability 0."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"top_p"})," (",(0,l.jsx)(n.em,{children:"float"}),") \u2013 Keep most likely words until the cumulated\nprobability is greater than p. If used with top_k: both\nconditions will be applied"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["topk_ids: Shaped ",(0,l.jsx)(n.code,{children:"(batch_size, 1)"}),". These are\nthe sampled word indices in the output vocab."]}),"\n",(0,l.jsxs)(n.li,{children:["topk_scores: Shaped ",(0,l.jsx)(n.code,{children:"(batch_size, 1)"}),". These\nare essentially ",(0,l.jsx)(n.code,{children:"(logits / temperature)[topk_ids]"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Return type:"}),"\n(LongTensor, FloatTensor)"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"scoring",children:"Scoring"}),"\n",(0,l.jsxs)(n.h3,{id:"class-eolepredictpenaltiespenaltybuildercov_pen-length_pen",children:[(0,l.jsx)(n.em,{children:"class"})," eole.predict.penalties.PenaltyBuilder(cov_pen, length_pen)"]}),"\n",(0,l.jsxs)(n.p,{children:["Bases: ",(0,l.jsx)(n.code,{children:"object"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns the Length and Coverage Penalty function for Beam Search."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"length_pen"})," (",(0,l.jsx)(n.em,{children:"str"}),") \u2013 option name of length pen"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"cov_pen"})," (",(0,l.jsx)(n.em,{children:"str"}),") \u2013 option name of cov pen"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Variables:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"has_cov_pen"})," (",(0,l.jsx)(n.em,{children:"bool"}),") \u2013 Whether coverage penalty is None (applying it\nis a no-op). Note that the converse isn\u2019t true. Setting beta\nto 0 should force coverage length to be a no-op."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"has_len_pen"})," (",(0,l.jsx)(n.em,{children:"bool"}),") \u2013 Whether length penalty is None (applying it\nis a no-op). Note that the converse isn\u2019t true. Setting alpha\nto 1 should force length penalty to be a no-op."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"coverage_penalty"})," (",(0,l.jsx)(n.em,{children:"callable"})," ",(0,l.jsx)(n.em,{children:"["})," *[*",(0,l.jsx)(n.em,{children:"FloatTensor"})," ",(0,l.jsx)(n.em,{children:","})," ",(0,l.jsx)(n.em,{children:"float"})," ",(0,l.jsx)(n.em,{children:"]"})," ",(0,l.jsx)(n.em,{children:","})," ",(0,l.jsx)(n.em,{children:"FloatTensor"})," ",(0,l.jsx)(n.em,{children:"]"}),") \u2013 Calculates the coverage penalty."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"length_penalty"})," (",(0,l.jsx)(n.em,{children:"callable"})," ",(0,l.jsx)(n.em,{children:"["})," *[*",(0,l.jsx)(n.em,{children:"int"})," ",(0,l.jsx)(n.em,{children:","})," ",(0,l.jsx)(n.em,{children:"float"})," ",(0,l.jsx)(n.em,{children:"]"})," ",(0,l.jsx)(n.em,{children:","})," ",(0,l.jsx)(n.em,{children:"float"})," ",(0,l.jsx)(n.em,{children:"]"}),") \u2013 Calculates\nthe length penalty."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"coverage_nonecov-beta00",children:"coverage_none(cov, beta=0.0)"}),"\n",(0,l.jsx)(n.p,{children:"Returns zero as penalty"}),"\n",(0,l.jsx)(n.h4,{id:"coverage_summarycov-beta00",children:"coverage_summary(cov, beta=0.0)"}),"\n",(0,l.jsx)(n.p,{children:"Our summary penalty."}),"\n",(0,l.jsx)(n.h4,{id:"coverage_wucov-beta00",children:"coverage_wu(cov, beta=0.0)"}),"\n",(0,l.jsx)(n.p,{children:"GNMT coverage re-ranking score."}),"\n",(0,l.jsxs)(n.p,{children:["See \u201cGoogle\u2019s Neural Machine Translation System\u201d [].\n",(0,l.jsx)(n.code,{children:"cov"})," is expected to be sized ",(0,l.jsx)(n.code,{children:"(*, seq_len)"}),", where ",(0,l.jsx)(n.code,{children:"*"})," is\nprobably ",(0,l.jsx)(n.code,{children:"batch_size x beam_size"})," but could be several\ndimensions like ",(0,l.jsx)(n.code,{children:"(batch_size, beam_size)"}),". If ",(0,l.jsx)(n.code,{children:"cov"})," is attention,\nthen the ",(0,l.jsx)(n.code,{children:"seq_len"})," axis probably sums to (almost) 1."]}),"\n",(0,l.jsx)(n.h4,{id:"length_averagecur_len-alpha10",children:"length_average(cur_len, alpha=1.0)"}),"\n",(0,l.jsx)(n.p,{children:"Returns the current sequence length."}),"\n",(0,l.jsx)(n.h4,{id:"length_nonecur_len-alpha00",children:"length_none(cur_len, alpha=0.0)"}),"\n",(0,l.jsx)(n.p,{children:"Returns unmodified scores."}),"\n",(0,l.jsx)(n.h4,{id:"length_wucur_len-alpha00",children:"length_wu(cur_len, alpha=0.0)"}),"\n",(0,l.jsx)(n.p,{children:"GNMT length re-ranking score."}),"\n",(0,l.jsx)(n.p,{children:"See \u201cGoogle\u2019s Neural Machine Translation System\u201d []."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var l=r(6540);const s={},t=l.createContext(s);function i(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);